//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DocumentsModule {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MantakDBDataSetDocuments")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MantakDBDataSetDocuments : global::System.Data.DataSet {
        
        private tm_kubiotDataTable tabletm_kubiot;
        
        private roleTypesDataTable tableroleTypes;
        
        private documentsDataTable tabledocuments;
        
        private documentsSignDataTable tabledocumentsSign;
        
        private tmtafkiduDataTable tabletmtafkidu;
        
        private tiukimDataTable tabletiukim;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public MantakDBDataSetDocuments() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected MantakDBDataSetDocuments(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tm_kubiot"] != null)) {
                    base.Tables.Add(new tm_kubiotDataTable(ds.Tables["tm_kubiot"]));
                }
                if ((ds.Tables["roleTypes"] != null)) {
                    base.Tables.Add(new roleTypesDataTable(ds.Tables["roleTypes"]));
                }
                if ((ds.Tables["documents"] != null)) {
                    base.Tables.Add(new documentsDataTable(ds.Tables["documents"]));
                }
                if ((ds.Tables["documentsSign"] != null)) {
                    base.Tables.Add(new documentsSignDataTable(ds.Tables["documentsSign"]));
                }
                if ((ds.Tables["tmtafkidu"] != null)) {
                    base.Tables.Add(new tmtafkiduDataTable(ds.Tables["tmtafkidu"]));
                }
                if ((ds.Tables["tiukim"] != null)) {
                    base.Tables.Add(new tiukimDataTable(ds.Tables["tiukim"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tm_kubiotDataTable tm_kubiot {
            get {
                return this.tabletm_kubiot;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public roleTypesDataTable roleTypes {
            get {
                return this.tableroleTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public documentsDataTable documents {
            get {
                return this.tabledocuments;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public documentsSignDataTable documentsSign {
            get {
                return this.tabledocumentsSign;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tmtafkiduDataTable tmtafkidu {
            get {
                return this.tabletmtafkidu;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tiukimDataTable tiukim {
            get {
                return this.tabletiukim;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MantakDBDataSetDocuments cln = ((MantakDBDataSetDocuments)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tm_kubiot"] != null)) {
                    base.Tables.Add(new tm_kubiotDataTable(ds.Tables["tm_kubiot"]));
                }
                if ((ds.Tables["roleTypes"] != null)) {
                    base.Tables.Add(new roleTypesDataTable(ds.Tables["roleTypes"]));
                }
                if ((ds.Tables["documents"] != null)) {
                    base.Tables.Add(new documentsDataTable(ds.Tables["documents"]));
                }
                if ((ds.Tables["documentsSign"] != null)) {
                    base.Tables.Add(new documentsSignDataTable(ds.Tables["documentsSign"]));
                }
                if ((ds.Tables["tmtafkidu"] != null)) {
                    base.Tables.Add(new tmtafkiduDataTable(ds.Tables["tmtafkidu"]));
                }
                if ((ds.Tables["tiukim"] != null)) {
                    base.Tables.Add(new tiukimDataTable(ds.Tables["tiukim"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tabletm_kubiot = ((tm_kubiotDataTable)(base.Tables["tm_kubiot"]));
            if ((initTable == true)) {
                if ((this.tabletm_kubiot != null)) {
                    this.tabletm_kubiot.InitVars();
                }
            }
            this.tableroleTypes = ((roleTypesDataTable)(base.Tables["roleTypes"]));
            if ((initTable == true)) {
                if ((this.tableroleTypes != null)) {
                    this.tableroleTypes.InitVars();
                }
            }
            this.tabledocuments = ((documentsDataTable)(base.Tables["documents"]));
            if ((initTable == true)) {
                if ((this.tabledocuments != null)) {
                    this.tabledocuments.InitVars();
                }
            }
            this.tabledocumentsSign = ((documentsSignDataTable)(base.Tables["documentsSign"]));
            if ((initTable == true)) {
                if ((this.tabledocumentsSign != null)) {
                    this.tabledocumentsSign.InitVars();
                }
            }
            this.tabletmtafkidu = ((tmtafkiduDataTable)(base.Tables["tmtafkidu"]));
            if ((initTable == true)) {
                if ((this.tabletmtafkidu != null)) {
                    this.tabletmtafkidu.InitVars();
                }
            }
            this.tabletiukim = ((tiukimDataTable)(base.Tables["tiukim"]));
            if ((initTable == true)) {
                if ((this.tabletiukim != null)) {
                    this.tabletiukim.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MantakDBDataSetDocuments";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/mantakDBDataSetDocuments.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletm_kubiot = new tm_kubiotDataTable();
            base.Tables.Add(this.tabletm_kubiot);
            this.tableroleTypes = new roleTypesDataTable();
            base.Tables.Add(this.tableroleTypes);
            this.tabledocuments = new documentsDataTable();
            base.Tables.Add(this.tabledocuments);
            this.tabledocumentsSign = new documentsSignDataTable();
            base.Tables.Add(this.tabledocumentsSign);
            this.tabletmtafkidu = new tmtafkiduDataTable();
            base.Tables.Add(this.tabletmtafkidu);
            this.tabletiukim = new tiukimDataTable();
            base.Tables.Add(this.tabletiukim);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializetm_kubiot() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeroleTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializedocuments() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializedocumentsSign() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializetmtafkidu() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializetiukim() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MantakDBDataSetDocuments ds = new MantakDBDataSetDocuments();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void tm_kubiotRowChangeEventHandler(object sender, tm_kubiotRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void roleTypesRowChangeEventHandler(object sender, roleTypesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void documentsRowChangeEventHandler(object sender, documentsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void documentsSignRowChangeEventHandler(object sender, documentsSignRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void tmtafkiduRowChangeEventHandler(object sender, tmtafkiduRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void tiukimRowChangeEventHandler(object sender, tiukimRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tm_kubiotDataTable : global::System.Data.TypedTableBase<tm_kubiotRow> {
            
            private global::System.Data.DataColumn columncod_kobyh;
            
            private global::System.Data.DataColumn columnrow_0;
            
            private global::System.Data.DataColumn columnrow_1;
            
            private global::System.Data.DataColumn columnrow_2;
            
            private global::System.Data.DataColumn columnrow_3;
            
            private global::System.Data.DataColumn columnrow_4;
            
            private global::System.Data.DataColumn columnrow_5;
            
            private global::System.Data.DataColumn columnrow_6;
            
            private global::System.Data.DataColumn columnrow_7;
            
            private global::System.Data.DataColumn columnrow_8;
            
            private global::System.Data.DataColumn columnrow_9;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tm_kubiotDataTable() {
                this.TableName = "tm_kubiot";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal tm_kubiotDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected tm_kubiotDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn cod_kobyhColumn {
                get {
                    return this.columncod_kobyh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_0Column {
                get {
                    return this.columnrow_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_1Column {
                get {
                    return this.columnrow_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_2Column {
                get {
                    return this.columnrow_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_3Column {
                get {
                    return this.columnrow_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_4Column {
                get {
                    return this.columnrow_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_5Column {
                get {
                    return this.columnrow_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_6Column {
                get {
                    return this.columnrow_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_7Column {
                get {
                    return this.columnrow_7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_8Column {
                get {
                    return this.columnrow_8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn row_9Column {
                get {
                    return this.columnrow_9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tm_kubiotRow this[int index] {
                get {
                    return ((tm_kubiotRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tm_kubiotRowChangeEventHandler tm_kubiotRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tm_kubiotRowChangeEventHandler tm_kubiotRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tm_kubiotRowChangeEventHandler tm_kubiotRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tm_kubiotRowChangeEventHandler tm_kubiotRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addtm_kubiotRow(tm_kubiotRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tm_kubiotRow Addtm_kubiotRow(short cod_kobyh, string row_0, string row_1, string row_2, string row_3, string row_4, string row_5, string row_6, string row_7, string row_8, string row_9) {
                tm_kubiotRow rowtm_kubiotRow = ((tm_kubiotRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cod_kobyh,
                        row_0,
                        row_1,
                        row_2,
                        row_3,
                        row_4,
                        row_5,
                        row_6,
                        row_7,
                        row_8,
                        row_9};
                rowtm_kubiotRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtm_kubiotRow);
                return rowtm_kubiotRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tm_kubiotRow FindBycod_kobyh(short cod_kobyh) {
                return ((tm_kubiotRow)(this.Rows.Find(new object[] {
                            cod_kobyh})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tm_kubiotDataTable cln = ((tm_kubiotDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tm_kubiotDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columncod_kobyh = base.Columns["cod_kobyh"];
                this.columnrow_0 = base.Columns["row_0"];
                this.columnrow_1 = base.Columns["row_1"];
                this.columnrow_2 = base.Columns["row_2"];
                this.columnrow_3 = base.Columns["row_3"];
                this.columnrow_4 = base.Columns["row_4"];
                this.columnrow_5 = base.Columns["row_5"];
                this.columnrow_6 = base.Columns["row_6"];
                this.columnrow_7 = base.Columns["row_7"];
                this.columnrow_8 = base.Columns["row_8"];
                this.columnrow_9 = base.Columns["row_9"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columncod_kobyh = new global::System.Data.DataColumn("cod_kobyh", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_kobyh);
                this.columnrow_0 = new global::System.Data.DataColumn("row_0", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_0);
                this.columnrow_1 = new global::System.Data.DataColumn("row_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_1);
                this.columnrow_2 = new global::System.Data.DataColumn("row_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_2);
                this.columnrow_3 = new global::System.Data.DataColumn("row_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_3);
                this.columnrow_4 = new global::System.Data.DataColumn("row_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_4);
                this.columnrow_5 = new global::System.Data.DataColumn("row_5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_5);
                this.columnrow_6 = new global::System.Data.DataColumn("row_6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_6);
                this.columnrow_7 = new global::System.Data.DataColumn("row_7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_7);
                this.columnrow_8 = new global::System.Data.DataColumn("row_8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_8);
                this.columnrow_9 = new global::System.Data.DataColumn("row_9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_9);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncod_kobyh}, true));
                this.columncod_kobyh.AllowDBNull = false;
                this.columncod_kobyh.Unique = true;
                this.columnrow_0.AllowDBNull = false;
                this.columnrow_0.MaxLength = 25;
                this.columnrow_1.AllowDBNull = false;
                this.columnrow_1.MaxLength = 25;
                this.columnrow_2.AllowDBNull = false;
                this.columnrow_2.MaxLength = 25;
                this.columnrow_3.AllowDBNull = false;
                this.columnrow_3.MaxLength = 25;
                this.columnrow_4.AllowDBNull = false;
                this.columnrow_4.MaxLength = 25;
                this.columnrow_5.AllowDBNull = false;
                this.columnrow_5.MaxLength = 25;
                this.columnrow_6.AllowDBNull = false;
                this.columnrow_6.MaxLength = 25;
                this.columnrow_7.AllowDBNull = false;
                this.columnrow_7.MaxLength = 25;
                this.columnrow_8.AllowDBNull = false;
                this.columnrow_8.MaxLength = 25;
                this.columnrow_9.AllowDBNull = false;
                this.columnrow_9.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tm_kubiotRow Newtm_kubiotRow() {
                return ((tm_kubiotRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tm_kubiotRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tm_kubiotRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tm_kubiotRowChanged != null)) {
                    this.tm_kubiotRowChanged(this, new tm_kubiotRowChangeEvent(((tm_kubiotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tm_kubiotRowChanging != null)) {
                    this.tm_kubiotRowChanging(this, new tm_kubiotRowChangeEvent(((tm_kubiotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tm_kubiotRowDeleted != null)) {
                    this.tm_kubiotRowDeleted(this, new tm_kubiotRowChangeEvent(((tm_kubiotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tm_kubiotRowDeleting != null)) {
                    this.tm_kubiotRowDeleting(this, new tm_kubiotRowChangeEvent(((tm_kubiotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removetm_kubiotRow(tm_kubiotRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MantakDBDataSetDocuments ds = new MantakDBDataSetDocuments();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tm_kubiotDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class roleTypesDataTable : global::System.Data.TypedTableBase<roleTypesRow> {
            
            private global::System.Data.DataColumn columnroleTypeCode;
            
            private global::System.Data.DataColumn columnroleType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public roleTypesDataTable() {
                this.TableName = "roleTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal roleTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected roleTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn roleTypeCodeColumn {
                get {
                    return this.columnroleTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn roleTypeColumn {
                get {
                    return this.columnroleType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public roleTypesRow this[int index] {
                get {
                    return ((roleTypesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event roleTypesRowChangeEventHandler roleTypesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event roleTypesRowChangeEventHandler roleTypesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event roleTypesRowChangeEventHandler roleTypesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event roleTypesRowChangeEventHandler roleTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddroleTypesRow(roleTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public roleTypesRow AddroleTypesRow(short roleTypeCode, string roleType) {
                roleTypesRow rowroleTypesRow = ((roleTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        roleTypeCode,
                        roleType};
                rowroleTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowroleTypesRow);
                return rowroleTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public roleTypesRow FindByroleTypeCode(short roleTypeCode) {
                return ((roleTypesRow)(this.Rows.Find(new object[] {
                            roleTypeCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                roleTypesDataTable cln = ((roleTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new roleTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnroleTypeCode = base.Columns["roleTypeCode"];
                this.columnroleType = base.Columns["roleType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnroleTypeCode = new global::System.Data.DataColumn("roleTypeCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnroleTypeCode);
                this.columnroleType = new global::System.Data.DataColumn("roleType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnroleType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnroleTypeCode}, true));
                this.columnroleTypeCode.AllowDBNull = false;
                this.columnroleTypeCode.Unique = true;
                this.columnroleType.AllowDBNull = false;
                this.columnroleType.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public roleTypesRow NewroleTypesRow() {
                return ((roleTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new roleTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(roleTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.roleTypesRowChanged != null)) {
                    this.roleTypesRowChanged(this, new roleTypesRowChangeEvent(((roleTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.roleTypesRowChanging != null)) {
                    this.roleTypesRowChanging(this, new roleTypesRowChangeEvent(((roleTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.roleTypesRowDeleted != null)) {
                    this.roleTypesRowDeleted(this, new roleTypesRowChangeEvent(((roleTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.roleTypesRowDeleting != null)) {
                    this.roleTypesRowDeleting(this, new roleTypesRowChangeEvent(((roleTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveroleTypesRow(roleTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MantakDBDataSetDocuments ds = new MantakDBDataSetDocuments();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "roleTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class documentsDataTable : global::System.Data.TypedTableBase<documentsRow> {
            
            private global::System.Data.DataColumn columnshotef_mismach;
            
            private global::System.Data.DataColumn columnmismach_or_kovetz;
            
            private global::System.Data.DataColumn columnhanadon;
            
            private global::System.Data.DataColumn columnis_nichnas;
            
            private global::System.Data.DataColumn columnshotef_nichnas_yotze;
            
            private global::System.Data.DataColumn columntarich_hamichtav;
            
            private global::System.Data.DataColumn columntarich_hazana;
            
            private global::System.Data.DataColumn columnzman_hazana;
            
            private global::System.Data.DataColumn columnkod_sholeah;
            
            private global::System.Data.DataColumn columnteur_tafkid_sholeah;
            
            private global::System.Data.DataColumn columnsimuchin;
            
            private global::System.Data.DataColumn columnsimuchin_metzumtzam;
            
            private global::System.Data.DataColumn columnkod_sivug_bitchoni;
            
            private global::System.Data.DataColumn columnkod_meabed_tamlilim;
            
            private global::System.Data.DataColumn columnmsd_template;
            
            private global::System.Data.DataColumn columnis_kayam;
            
            private global::System.Data.DataColumn columnis_hufatz;
            
            private global::System.Data.DataColumn columntarich_hafatza;
            
            private global::System.Data.DataColumn columnis_pail;
            
            private global::System.Data.DataColumn columnmakor;
            
            private global::System.Data.DataColumn columnasmachta_makor;
            
            private global::System.Data.DataColumn columnhearot;
            
            private global::System.Data.DataColumn columnmsd_proiect;
            
            private global::System.Data.DataColumn columnis_hasum;
            
            private global::System.Data.DataColumn columnis_rapat;
            
            private global::System.Data.DataColumn columnis_sodi;
            
            private global::System.Data.DataColumn columnuser_metaiek;
            
            private global::System.Data.DataColumn columnTxt;
            
            private global::System.Data.DataColumn columnLastTxtUpdateDate;
            
            private global::System.Data.DataColumn columnfile_data;
            
            private global::System.Data.DataColumn columnfile_extension;
            
            private global::System.Data.DataColumn columnhasAtts;
            
            private global::System.Data.DataColumn columndocType;
            
            private global::System.Data.DataColumn columnwhoOpenedForEdit;
            
            private global::System.Data.DataColumn columnisTransferedToSign;
            
            private global::System.Data.DataColumn columndateTransferedToSign;
            
            private global::System.Data.DataColumn columnisSigned;
            
            private global::System.Data.DataColumn columndateSigned;
            
            private global::System.Data.DataColumn columnsignedAttId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsDataTable() {
                this.TableName = "documents";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal documentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected documentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn shotef_mismachColumn {
                get {
                    return this.columnshotef_mismach;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn mismach_or_kovetzColumn {
                get {
                    return this.columnmismach_or_kovetz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hanadonColumn {
                get {
                    return this.columnhanadon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn is_nichnasColumn {
                get {
                    return this.columnis_nichnas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn shotef_nichnas_yotzeColumn {
                get {
                    return this.columnshotef_nichnas_yotze;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tarich_hamichtavColumn {
                get {
                    return this.columntarich_hamichtav;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tarich_hazanaColumn {
                get {
                    return this.columntarich_hazana;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn zman_hazanaColumn {
                get {
                    return this.columnzman_hazana;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn kod_sholeahColumn {
                get {
                    return this.columnkod_sholeah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn teur_tafkid_sholeahColumn {
                get {
                    return this.columnteur_tafkid_sholeah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn simuchinColumn {
                get {
                    return this.columnsimuchin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn simuchin_metzumtzamColumn {
                get {
                    return this.columnsimuchin_metzumtzam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn kod_sivug_bitchoniColumn {
                get {
                    return this.columnkod_sivug_bitchoni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn kod_meabed_tamlilimColumn {
                get {
                    return this.columnkod_meabed_tamlilim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn msd_templateColumn {
                get {
                    return this.columnmsd_template;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn is_kayamColumn {
                get {
                    return this.columnis_kayam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn is_hufatzColumn {
                get {
                    return this.columnis_hufatz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tarich_hafatzaColumn {
                get {
                    return this.columntarich_hafatza;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn is_pailColumn {
                get {
                    return this.columnis_pail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn makorColumn {
                get {
                    return this.columnmakor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn asmachta_makorColumn {
                get {
                    return this.columnasmachta_makor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hearotColumn {
                get {
                    return this.columnhearot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn msd_proiectColumn {
                get {
                    return this.columnmsd_proiect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn is_hasumColumn {
                get {
                    return this.columnis_hasum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn is_rapatColumn {
                get {
                    return this.columnis_rapat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn is_sodiColumn {
                get {
                    return this.columnis_sodi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn user_metaiekColumn {
                get {
                    return this.columnuser_metaiek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TxtColumn {
                get {
                    return this.columnTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastTxtUpdateDateColumn {
                get {
                    return this.columnLastTxtUpdateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn file_dataColumn {
                get {
                    return this.columnfile_data;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn file_extensionColumn {
                get {
                    return this.columnfile_extension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hasAttsColumn {
                get {
                    return this.columnhasAtts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn docTypeColumn {
                get {
                    return this.columndocType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn whoOpenedForEditColumn {
                get {
                    return this.columnwhoOpenedForEdit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn isTransferedToSignColumn {
                get {
                    return this.columnisTransferedToSign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dateTransferedToSignColumn {
                get {
                    return this.columndateTransferedToSign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn isSignedColumn {
                get {
                    return this.columnisSigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dateSignedColumn {
                get {
                    return this.columndateSigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn signedAttIdColumn {
                get {
                    return this.columnsignedAttId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsRow this[int index] {
                get {
                    return ((documentsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event documentsRowChangeEventHandler documentsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event documentsRowChangeEventHandler documentsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event documentsRowChangeEventHandler documentsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event documentsRowChangeEventHandler documentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AdddocumentsRow(documentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsRow AdddocumentsRow(
                        int shotef_mismach, 
                        bool mismach_or_kovetz, 
                        string hanadon, 
                        bool is_nichnas, 
                        int shotef_nichnas_yotze, 
                        string tarich_hamichtav, 
                        string tarich_hazana, 
                        string zman_hazana, 
                        int kod_sholeah, 
                        string teur_tafkid_sholeah, 
                        string simuchin, 
                        string simuchin_metzumtzam, 
                        short kod_sivug_bitchoni, 
                        short kod_meabed_tamlilim, 
                        short msd_template, 
                        bool is_kayam, 
                        bool is_hufatz, 
                        string tarich_hafatza, 
                        bool is_pail, 
                        string makor, 
                        string asmachta_makor, 
                        string hearot, 
                        short msd_proiect, 
                        bool is_hasum, 
                        bool is_rapat, 
                        bool is_sodi, 
                        string user_metaiek, 
                        string Txt, 
                        System.DateTime LastTxtUpdateDate, 
                        byte[] file_data, 
                        string file_extension, 
                        bool hasAtts, 
                        short docType, 
                        int whoOpenedForEdit, 
                        bool isTransferedToSign, 
                        System.DateTime dateTransferedToSign, 
                        bool isSigned, 
                        System.DateTime dateSigned, 
                        int signedAttId) {
                documentsRow rowdocumentsRow = ((documentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        shotef_mismach,
                        mismach_or_kovetz,
                        hanadon,
                        is_nichnas,
                        shotef_nichnas_yotze,
                        tarich_hamichtav,
                        tarich_hazana,
                        zman_hazana,
                        kod_sholeah,
                        teur_tafkid_sholeah,
                        simuchin,
                        simuchin_metzumtzam,
                        kod_sivug_bitchoni,
                        kod_meabed_tamlilim,
                        msd_template,
                        is_kayam,
                        is_hufatz,
                        tarich_hafatza,
                        is_pail,
                        makor,
                        asmachta_makor,
                        hearot,
                        msd_proiect,
                        is_hasum,
                        is_rapat,
                        is_sodi,
                        user_metaiek,
                        Txt,
                        LastTxtUpdateDate,
                        file_data,
                        file_extension,
                        hasAtts,
                        docType,
                        whoOpenedForEdit,
                        isTransferedToSign,
                        dateTransferedToSign,
                        isSigned,
                        dateSigned,
                        signedAttId};
                rowdocumentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdocumentsRow);
                return rowdocumentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsRow FindByshotef_mismach(int shotef_mismach) {
                return ((documentsRow)(this.Rows.Find(new object[] {
                            shotef_mismach})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                documentsDataTable cln = ((documentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new documentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnshotef_mismach = base.Columns["shotef_mismach"];
                this.columnmismach_or_kovetz = base.Columns["mismach_or_kovetz"];
                this.columnhanadon = base.Columns["hanadon"];
                this.columnis_nichnas = base.Columns["is_nichnas"];
                this.columnshotef_nichnas_yotze = base.Columns["shotef_nichnas_yotze"];
                this.columntarich_hamichtav = base.Columns["tarich_hamichtav"];
                this.columntarich_hazana = base.Columns["tarich_hazana"];
                this.columnzman_hazana = base.Columns["zman_hazana"];
                this.columnkod_sholeah = base.Columns["kod_sholeah"];
                this.columnteur_tafkid_sholeah = base.Columns["teur_tafkid_sholeah"];
                this.columnsimuchin = base.Columns["simuchin"];
                this.columnsimuchin_metzumtzam = base.Columns["simuchin_metzumtzam"];
                this.columnkod_sivug_bitchoni = base.Columns["kod_sivug_bitchoni"];
                this.columnkod_meabed_tamlilim = base.Columns["kod_meabed_tamlilim"];
                this.columnmsd_template = base.Columns["msd_template"];
                this.columnis_kayam = base.Columns["is_kayam"];
                this.columnis_hufatz = base.Columns["is_hufatz"];
                this.columntarich_hafatza = base.Columns["tarich_hafatza"];
                this.columnis_pail = base.Columns["is_pail"];
                this.columnmakor = base.Columns["makor"];
                this.columnasmachta_makor = base.Columns["asmachta_makor"];
                this.columnhearot = base.Columns["hearot"];
                this.columnmsd_proiect = base.Columns["msd_proiect"];
                this.columnis_hasum = base.Columns["is_hasum"];
                this.columnis_rapat = base.Columns["is_rapat"];
                this.columnis_sodi = base.Columns["is_sodi"];
                this.columnuser_metaiek = base.Columns["user_metaiek"];
                this.columnTxt = base.Columns["Txt"];
                this.columnLastTxtUpdateDate = base.Columns["LastTxtUpdateDate"];
                this.columnfile_data = base.Columns["file_data"];
                this.columnfile_extension = base.Columns["file_extension"];
                this.columnhasAtts = base.Columns["hasAtts"];
                this.columndocType = base.Columns["docType"];
                this.columnwhoOpenedForEdit = base.Columns["whoOpenedForEdit"];
                this.columnisTransferedToSign = base.Columns["isTransferedToSign"];
                this.columndateTransferedToSign = base.Columns["dateTransferedToSign"];
                this.columnisSigned = base.Columns["isSigned"];
                this.columndateSigned = base.Columns["dateSigned"];
                this.columnsignedAttId = base.Columns["signedAttId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnshotef_mismach = new global::System.Data.DataColumn("shotef_mismach", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshotef_mismach);
                this.columnmismach_or_kovetz = new global::System.Data.DataColumn("mismach_or_kovetz", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmismach_or_kovetz);
                this.columnhanadon = new global::System.Data.DataColumn("hanadon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhanadon);
                this.columnis_nichnas = new global::System.Data.DataColumn("is_nichnas", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_nichnas);
                this.columnshotef_nichnas_yotze = new global::System.Data.DataColumn("shotef_nichnas_yotze", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshotef_nichnas_yotze);
                this.columntarich_hamichtav = new global::System.Data.DataColumn("tarich_hamichtav", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntarich_hamichtav);
                this.columntarich_hazana = new global::System.Data.DataColumn("tarich_hazana", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntarich_hazana);
                this.columnzman_hazana = new global::System.Data.DataColumn("zman_hazana", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzman_hazana);
                this.columnkod_sholeah = new global::System.Data.DataColumn("kod_sholeah", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_sholeah);
                this.columnteur_tafkid_sholeah = new global::System.Data.DataColumn("teur_tafkid_sholeah", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnteur_tafkid_sholeah);
                this.columnsimuchin = new global::System.Data.DataColumn("simuchin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsimuchin);
                this.columnsimuchin_metzumtzam = new global::System.Data.DataColumn("simuchin_metzumtzam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsimuchin_metzumtzam);
                this.columnkod_sivug_bitchoni = new global::System.Data.DataColumn("kod_sivug_bitchoni", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_sivug_bitchoni);
                this.columnkod_meabed_tamlilim = new global::System.Data.DataColumn("kod_meabed_tamlilim", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_meabed_tamlilim);
                this.columnmsd_template = new global::System.Data.DataColumn("msd_template", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmsd_template);
                this.columnis_kayam = new global::System.Data.DataColumn("is_kayam", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_kayam);
                this.columnis_hufatz = new global::System.Data.DataColumn("is_hufatz", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_hufatz);
                this.columntarich_hafatza = new global::System.Data.DataColumn("tarich_hafatza", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntarich_hafatza);
                this.columnis_pail = new global::System.Data.DataColumn("is_pail", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_pail);
                this.columnmakor = new global::System.Data.DataColumn("makor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmakor);
                this.columnasmachta_makor = new global::System.Data.DataColumn("asmachta_makor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasmachta_makor);
                this.columnhearot = new global::System.Data.DataColumn("hearot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhearot);
                this.columnmsd_proiect = new global::System.Data.DataColumn("msd_proiect", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmsd_proiect);
                this.columnis_hasum = new global::System.Data.DataColumn("is_hasum", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_hasum);
                this.columnis_rapat = new global::System.Data.DataColumn("is_rapat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_rapat);
                this.columnis_sodi = new global::System.Data.DataColumn("is_sodi", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_sodi);
                this.columnuser_metaiek = new global::System.Data.DataColumn("user_metaiek", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_metaiek);
                this.columnTxt = new global::System.Data.DataColumn("Txt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTxt);
                this.columnLastTxtUpdateDate = new global::System.Data.DataColumn("LastTxtUpdateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTxtUpdateDate);
                this.columnfile_data = new global::System.Data.DataColumn("file_data", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfile_data);
                this.columnfile_extension = new global::System.Data.DataColumn("file_extension", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfile_extension);
                this.columnhasAtts = new global::System.Data.DataColumn("hasAtts", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhasAtts);
                this.columndocType = new global::System.Data.DataColumn("docType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocType);
                this.columnwhoOpenedForEdit = new global::System.Data.DataColumn("whoOpenedForEdit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwhoOpenedForEdit);
                this.columnisTransferedToSign = new global::System.Data.DataColumn("isTransferedToSign", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisTransferedToSign);
                this.columndateTransferedToSign = new global::System.Data.DataColumn("dateTransferedToSign", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateTransferedToSign);
                this.columnisSigned = new global::System.Data.DataColumn("isSigned", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisSigned);
                this.columndateSigned = new global::System.Data.DataColumn("dateSigned", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateSigned);
                this.columnsignedAttId = new global::System.Data.DataColumn("signedAttId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsignedAttId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnshotef_mismach}, true));
                this.columnshotef_mismach.AllowDBNull = false;
                this.columnshotef_mismach.Unique = true;
                this.columnmismach_or_kovetz.AllowDBNull = false;
                this.columnhanadon.AllowDBNull = false;
                this.columnhanadon.MaxLength = 120;
                this.columnis_nichnas.AllowDBNull = false;
                this.columnshotef_nichnas_yotze.AllowDBNull = false;
                this.columntarich_hamichtav.AllowDBNull = false;
                this.columntarich_hamichtav.MaxLength = 8;
                this.columntarich_hazana.AllowDBNull = false;
                this.columntarich_hazana.MaxLength = 8;
                this.columnzman_hazana.AllowDBNull = false;
                this.columnzman_hazana.MaxLength = 6;
                this.columnkod_sholeah.AllowDBNull = false;
                this.columnteur_tafkid_sholeah.AllowDBNull = false;
                this.columnteur_tafkid_sholeah.MaxLength = 50;
                this.columnsimuchin.AllowDBNull = false;
                this.columnsimuchin.MaxLength = 40;
                this.columnsimuchin_metzumtzam.AllowDBNull = false;
                this.columnsimuchin_metzumtzam.MaxLength = 25;
                this.columnkod_sivug_bitchoni.AllowDBNull = false;
                this.columnkod_meabed_tamlilim.AllowDBNull = false;
                this.columnmsd_template.AllowDBNull = false;
                this.columnis_kayam.AllowDBNull = false;
                this.columnis_hufatz.AllowDBNull = false;
                this.columntarich_hafatza.AllowDBNull = false;
                this.columntarich_hafatza.MaxLength = 8;
                this.columnis_pail.AllowDBNull = false;
                this.columnmakor.AllowDBNull = false;
                this.columnmakor.MaxLength = 1;
                this.columnasmachta_makor.AllowDBNull = false;
                this.columnasmachta_makor.MaxLength = 15;
                this.columnhearot.AllowDBNull = false;
                this.columnhearot.MaxLength = 2147483647;
                this.columnmsd_proiect.AllowDBNull = false;
                this.columnis_hasum.AllowDBNull = false;
                this.columnis_rapat.AllowDBNull = false;
                this.columnis_sodi.AllowDBNull = false;
                this.columnuser_metaiek.AllowDBNull = false;
                this.columnuser_metaiek.MaxLength = 6;
                this.columnTxt.MaxLength = 2147483647;
                this.columnfile_extension.AllowDBNull = false;
                this.columnfile_extension.MaxLength = 50;
                this.columnhasAtts.ReadOnly = true;
                this.columndocType.AllowDBNull = false;
                this.columnwhoOpenedForEdit.AllowDBNull = false;
                this.columnisTransferedToSign.AllowDBNull = false;
                this.columndateTransferedToSign.AllowDBNull = false;
                this.columnisSigned.AllowDBNull = false;
                this.columndateSigned.AllowDBNull = false;
                this.columnsignedAttId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsRow NewdocumentsRow() {
                return ((documentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new documentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(documentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.documentsRowChanged != null)) {
                    this.documentsRowChanged(this, new documentsRowChangeEvent(((documentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.documentsRowChanging != null)) {
                    this.documentsRowChanging(this, new documentsRowChangeEvent(((documentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.documentsRowDeleted != null)) {
                    this.documentsRowDeleted(this, new documentsRowChangeEvent(((documentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.documentsRowDeleting != null)) {
                    this.documentsRowDeleting(this, new documentsRowChangeEvent(((documentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovedocumentsRow(documentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MantakDBDataSetDocuments ds = new MantakDBDataSetDocuments();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "documentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class documentsSignDataTable : global::System.Data.TypedTableBase<documentsSignRow> {
            
            private global::System.Data.DataColumn columnshotef_mismach;
            
            private global::System.Data.DataColumn columnhanadon;
            
            private global::System.Data.DataColumn columntarich_hamichtav;
            
            private global::System.Data.DataColumn columnteur_tafkid_sholeah;
            
            private global::System.Data.DataColumn columnuser_metaiek;
            
            private global::System.Data.DataColumn columnisSigned;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsSignDataTable() {
                this.TableName = "documentsSign";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal documentsSignDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected documentsSignDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn shotef_mismachColumn {
                get {
                    return this.columnshotef_mismach;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hanadonColumn {
                get {
                    return this.columnhanadon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tarich_hamichtavColumn {
                get {
                    return this.columntarich_hamichtav;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn teur_tafkid_sholeahColumn {
                get {
                    return this.columnteur_tafkid_sholeah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn user_metaiekColumn {
                get {
                    return this.columnuser_metaiek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn isSignedColumn {
                get {
                    return this.columnisSigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsSignRow this[int index] {
                get {
                    return ((documentsSignRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event documentsSignRowChangeEventHandler documentsSignRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event documentsSignRowChangeEventHandler documentsSignRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event documentsSignRowChangeEventHandler documentsSignRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event documentsSignRowChangeEventHandler documentsSignRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AdddocumentsSignRow(documentsSignRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsSignRow AdddocumentsSignRow(int shotef_mismach, string hanadon, string tarich_hamichtav, string teur_tafkid_sholeah, string user_metaiek, bool isSigned) {
                documentsSignRow rowdocumentsSignRow = ((documentsSignRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        shotef_mismach,
                        hanadon,
                        tarich_hamichtav,
                        teur_tafkid_sholeah,
                        user_metaiek,
                        isSigned};
                rowdocumentsSignRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdocumentsSignRow);
                return rowdocumentsSignRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsSignRow FindByshotef_mismach(int shotef_mismach) {
                return ((documentsSignRow)(this.Rows.Find(new object[] {
                            shotef_mismach})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                documentsSignDataTable cln = ((documentsSignDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new documentsSignDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnshotef_mismach = base.Columns["shotef_mismach"];
                this.columnhanadon = base.Columns["hanadon"];
                this.columntarich_hamichtav = base.Columns["tarich_hamichtav"];
                this.columnteur_tafkid_sholeah = base.Columns["teur_tafkid_sholeah"];
                this.columnuser_metaiek = base.Columns["user_metaiek"];
                this.columnisSigned = base.Columns["isSigned"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnshotef_mismach = new global::System.Data.DataColumn("shotef_mismach", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshotef_mismach);
                this.columnhanadon = new global::System.Data.DataColumn("hanadon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhanadon);
                this.columntarich_hamichtav = new global::System.Data.DataColumn("tarich_hamichtav", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntarich_hamichtav);
                this.columnteur_tafkid_sholeah = new global::System.Data.DataColumn("teur_tafkid_sholeah", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnteur_tafkid_sholeah);
                this.columnuser_metaiek = new global::System.Data.DataColumn("user_metaiek", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_metaiek);
                this.columnisSigned = new global::System.Data.DataColumn("isSigned", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisSigned);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnshotef_mismach}, true));
                this.columnshotef_mismach.AllowDBNull = false;
                this.columnshotef_mismach.Unique = true;
                this.columnhanadon.AllowDBNull = false;
                this.columnhanadon.MaxLength = 120;
                this.columntarich_hamichtav.AllowDBNull = false;
                this.columntarich_hamichtav.MaxLength = 8;
                this.columnteur_tafkid_sholeah.MaxLength = 50;
                this.columnuser_metaiek.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsSignRow NewdocumentsSignRow() {
                return ((documentsSignRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new documentsSignRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(documentsSignRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.documentsSignRowChanged != null)) {
                    this.documentsSignRowChanged(this, new documentsSignRowChangeEvent(((documentsSignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.documentsSignRowChanging != null)) {
                    this.documentsSignRowChanging(this, new documentsSignRowChangeEvent(((documentsSignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.documentsSignRowDeleted != null)) {
                    this.documentsSignRowDeleted(this, new documentsSignRowChangeEvent(((documentsSignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.documentsSignRowDeleting != null)) {
                    this.documentsSignRowDeleting(this, new documentsSignRowChangeEvent(((documentsSignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovedocumentsSignRow(documentsSignRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MantakDBDataSetDocuments ds = new MantakDBDataSetDocuments();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "documentsSignDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tmtafkiduDataTable : global::System.Data.TypedTableBase<tmtafkiduRow> {
            
            private global::System.Data.DataColumn columntaor_tpkid;
            
            private global::System.Data.DataColumn columndoal;
            
            private global::System.Data.DataColumn columnFullName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tmtafkiduDataTable() {
                this.TableName = "tmtafkidu";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal tmtafkiduDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected tmtafkiduDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn taor_tpkidColumn {
                get {
                    return this.columntaor_tpkid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn doalColumn {
                get {
                    return this.columndoal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tmtafkiduRow this[int index] {
                get {
                    return ((tmtafkiduRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tmtafkiduRowChangeEventHandler tmtafkiduRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tmtafkiduRowChangeEventHandler tmtafkiduRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tmtafkiduRowChangeEventHandler tmtafkiduRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tmtafkiduRowChangeEventHandler tmtafkiduRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddtmtafkiduRow(tmtafkiduRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tmtafkiduRow AddtmtafkiduRow(string taor_tpkid, string doal, string FullName) {
                tmtafkiduRow rowtmtafkiduRow = ((tmtafkiduRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        taor_tpkid,
                        doal,
                        FullName};
                rowtmtafkiduRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtmtafkiduRow);
                return rowtmtafkiduRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tmtafkiduDataTable cln = ((tmtafkiduDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tmtafkiduDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columntaor_tpkid = base.Columns["taor_tpkid"];
                this.columndoal = base.Columns["doal"];
                this.columnFullName = base.Columns["FullName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columntaor_tpkid = new global::System.Data.DataColumn("taor_tpkid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaor_tpkid);
                this.columndoal = new global::System.Data.DataColumn("doal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoal);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columntaor_tpkid.AllowDBNull = false;
                this.columntaor_tpkid.MaxLength = 100;
                this.columndoal.AllowDBNull = false;
                this.columndoal.MaxLength = 35;
                this.columnFullName.ReadOnly = true;
                this.columnFullName.MaxLength = 101;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tmtafkiduRow NewtmtafkiduRow() {
                return ((tmtafkiduRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tmtafkiduRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tmtafkiduRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tmtafkiduRowChanged != null)) {
                    this.tmtafkiduRowChanged(this, new tmtafkiduRowChangeEvent(((tmtafkiduRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tmtafkiduRowChanging != null)) {
                    this.tmtafkiduRowChanging(this, new tmtafkiduRowChangeEvent(((tmtafkiduRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tmtafkiduRowDeleted != null)) {
                    this.tmtafkiduRowDeleted(this, new tmtafkiduRowChangeEvent(((tmtafkiduRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tmtafkiduRowDeleting != null)) {
                    this.tmtafkiduRowDeleting(this, new tmtafkiduRowChangeEvent(((tmtafkiduRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovetmtafkiduRow(tmtafkiduRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MantakDBDataSetDocuments ds = new MantakDBDataSetDocuments();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tmtafkiduDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tiukimDataTable : global::System.Data.TypedTableBase<tiukimRow> {
            
            private global::System.Data.DataColumn columnkod_marechet;
            
            private global::System.Data.DataColumn columnshotef_klali;
            
            private global::System.Data.DataColumn columnmispar_nose;
            
            private global::System.Data.DataColumn columnis_rashi;
            
            private global::System.Data.DataColumn columnmispar_in_tik;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tiukimDataTable() {
                this.TableName = "tiukim";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal tiukimDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected tiukimDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn kod_marechetColumn {
                get {
                    return this.columnkod_marechet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn shotef_klaliColumn {
                get {
                    return this.columnshotef_klali;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn mispar_noseColumn {
                get {
                    return this.columnmispar_nose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn is_rashiColumn {
                get {
                    return this.columnis_rashi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn mispar_in_tikColumn {
                get {
                    return this.columnmispar_in_tik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tiukimRow this[int index] {
                get {
                    return ((tiukimRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tiukimRowChangeEventHandler tiukimRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tiukimRowChangeEventHandler tiukimRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tiukimRowChangeEventHandler tiukimRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tiukimRowChangeEventHandler tiukimRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddtiukimRow(tiukimRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tiukimRow AddtiukimRow(short kod_marechet, int shotef_klali, int mispar_nose, bool is_rashi, int mispar_in_tik) {
                tiukimRow rowtiukimRow = ((tiukimRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        kod_marechet,
                        shotef_klali,
                        mispar_nose,
                        is_rashi,
                        mispar_in_tik};
                rowtiukimRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtiukimRow);
                return rowtiukimRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tiukimDataTable cln = ((tiukimDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tiukimDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnkod_marechet = base.Columns["kod_marechet"];
                this.columnshotef_klali = base.Columns["shotef_klali"];
                this.columnmispar_nose = base.Columns["mispar_nose"];
                this.columnis_rashi = base.Columns["is_rashi"];
                this.columnmispar_in_tik = base.Columns["mispar_in_tik"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnkod_marechet = new global::System.Data.DataColumn("kod_marechet", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_marechet);
                this.columnshotef_klali = new global::System.Data.DataColumn("shotef_klali", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshotef_klali);
                this.columnmispar_nose = new global::System.Data.DataColumn("mispar_nose", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmispar_nose);
                this.columnis_rashi = new global::System.Data.DataColumn("is_rashi", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_rashi);
                this.columnmispar_in_tik = new global::System.Data.DataColumn("mispar_in_tik", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmispar_in_tik);
                this.columnkod_marechet.AllowDBNull = false;
                this.columnshotef_klali.AllowDBNull = false;
                this.columnmispar_nose.AllowDBNull = false;
                this.columnis_rashi.AllowDBNull = false;
                this.columnmispar_in_tik.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tiukimRow NewtiukimRow() {
                return ((tiukimRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tiukimRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tiukimRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tiukimRowChanged != null)) {
                    this.tiukimRowChanged(this, new tiukimRowChangeEvent(((tiukimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tiukimRowChanging != null)) {
                    this.tiukimRowChanging(this, new tiukimRowChangeEvent(((tiukimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tiukimRowDeleted != null)) {
                    this.tiukimRowDeleted(this, new tiukimRowChangeEvent(((tiukimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tiukimRowDeleting != null)) {
                    this.tiukimRowDeleting(this, new tiukimRowChangeEvent(((tiukimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovetiukimRow(tiukimRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MantakDBDataSetDocuments ds = new MantakDBDataSetDocuments();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tiukimDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tm_kubiotRow : global::System.Data.DataRow {
            
            private tm_kubiotDataTable tabletm_kubiot;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal tm_kubiotRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletm_kubiot = ((tm_kubiotDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short cod_kobyh {
                get {
                    return ((short)(this[this.tabletm_kubiot.cod_kobyhColumn]));
                }
                set {
                    this[this.tabletm_kubiot.cod_kobyhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_0 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_0Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_1 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_1Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_2 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_2Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_3 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_3Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_4 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_4Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_5 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_5Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_6 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_6Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_7 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_7Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_8 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_8Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string row_9 {
                get {
                    return ((string)(this[this.tabletm_kubiot.row_9Column]));
                }
                set {
                    this[this.tabletm_kubiot.row_9Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class roleTypesRow : global::System.Data.DataRow {
            
            private roleTypesDataTable tableroleTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal roleTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableroleTypes = ((roleTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short roleTypeCode {
                get {
                    return ((short)(this[this.tableroleTypes.roleTypeCodeColumn]));
                }
                set {
                    this[this.tableroleTypes.roleTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string roleType {
                get {
                    return ((string)(this[this.tableroleTypes.roleTypeColumn]));
                }
                set {
                    this[this.tableroleTypes.roleTypeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class documentsRow : global::System.Data.DataRow {
            
            private documentsDataTable tabledocuments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal documentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledocuments = ((documentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int shotef_mismach {
                get {
                    return ((int)(this[this.tabledocuments.shotef_mismachColumn]));
                }
                set {
                    this[this.tabledocuments.shotef_mismachColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool mismach_or_kovetz {
                get {
                    return ((bool)(this[this.tabledocuments.mismach_or_kovetzColumn]));
                }
                set {
                    this[this.tabledocuments.mismach_or_kovetzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string hanadon {
                get {
                    return ((string)(this[this.tabledocuments.hanadonColumn]));
                }
                set {
                    this[this.tabledocuments.hanadonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool is_nichnas {
                get {
                    return ((bool)(this[this.tabledocuments.is_nichnasColumn]));
                }
                set {
                    this[this.tabledocuments.is_nichnasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int shotef_nichnas_yotze {
                get {
                    return ((int)(this[this.tabledocuments.shotef_nichnas_yotzeColumn]));
                }
                set {
                    this[this.tabledocuments.shotef_nichnas_yotzeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tarich_hamichtav {
                get {
                    return ((string)(this[this.tabledocuments.tarich_hamichtavColumn]));
                }
                set {
                    this[this.tabledocuments.tarich_hamichtavColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tarich_hazana {
                get {
                    return ((string)(this[this.tabledocuments.tarich_hazanaColumn]));
                }
                set {
                    this[this.tabledocuments.tarich_hazanaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string zman_hazana {
                get {
                    return ((string)(this[this.tabledocuments.zman_hazanaColumn]));
                }
                set {
                    this[this.tabledocuments.zman_hazanaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int kod_sholeah {
                get {
                    return ((int)(this[this.tabledocuments.kod_sholeahColumn]));
                }
                set {
                    this[this.tabledocuments.kod_sholeahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string teur_tafkid_sholeah {
                get {
                    return ((string)(this[this.tabledocuments.teur_tafkid_sholeahColumn]));
                }
                set {
                    this[this.tabledocuments.teur_tafkid_sholeahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string simuchin {
                get {
                    return ((string)(this[this.tabledocuments.simuchinColumn]));
                }
                set {
                    this[this.tabledocuments.simuchinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string simuchin_metzumtzam {
                get {
                    return ((string)(this[this.tabledocuments.simuchin_metzumtzamColumn]));
                }
                set {
                    this[this.tabledocuments.simuchin_metzumtzamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short kod_sivug_bitchoni {
                get {
                    return ((short)(this[this.tabledocuments.kod_sivug_bitchoniColumn]));
                }
                set {
                    this[this.tabledocuments.kod_sivug_bitchoniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short kod_meabed_tamlilim {
                get {
                    return ((short)(this[this.tabledocuments.kod_meabed_tamlilimColumn]));
                }
                set {
                    this[this.tabledocuments.kod_meabed_tamlilimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short msd_template {
                get {
                    return ((short)(this[this.tabledocuments.msd_templateColumn]));
                }
                set {
                    this[this.tabledocuments.msd_templateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool is_kayam {
                get {
                    return ((bool)(this[this.tabledocuments.is_kayamColumn]));
                }
                set {
                    this[this.tabledocuments.is_kayamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool is_hufatz {
                get {
                    return ((bool)(this[this.tabledocuments.is_hufatzColumn]));
                }
                set {
                    this[this.tabledocuments.is_hufatzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tarich_hafatza {
                get {
                    return ((string)(this[this.tabledocuments.tarich_hafatzaColumn]));
                }
                set {
                    this[this.tabledocuments.tarich_hafatzaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool is_pail {
                get {
                    return ((bool)(this[this.tabledocuments.is_pailColumn]));
                }
                set {
                    this[this.tabledocuments.is_pailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string makor {
                get {
                    return ((string)(this[this.tabledocuments.makorColumn]));
                }
                set {
                    this[this.tabledocuments.makorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string asmachta_makor {
                get {
                    return ((string)(this[this.tabledocuments.asmachta_makorColumn]));
                }
                set {
                    this[this.tabledocuments.asmachta_makorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string hearot {
                get {
                    return ((string)(this[this.tabledocuments.hearotColumn]));
                }
                set {
                    this[this.tabledocuments.hearotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short msd_proiect {
                get {
                    return ((short)(this[this.tabledocuments.msd_proiectColumn]));
                }
                set {
                    this[this.tabledocuments.msd_proiectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool is_hasum {
                get {
                    return ((bool)(this[this.tabledocuments.is_hasumColumn]));
                }
                set {
                    this[this.tabledocuments.is_hasumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool is_rapat {
                get {
                    return ((bool)(this[this.tabledocuments.is_rapatColumn]));
                }
                set {
                    this[this.tabledocuments.is_rapatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool is_sodi {
                get {
                    return ((bool)(this[this.tabledocuments.is_sodiColumn]));
                }
                set {
                    this[this.tabledocuments.is_sodiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string user_metaiek {
                get {
                    return ((string)(this[this.tabledocuments.user_metaiekColumn]));
                }
                set {
                    this[this.tabledocuments.user_metaiekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Txt {
                get {
                    try {
                        return ((string)(this[this.tabledocuments.TxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Txt\' in table \'documents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledocuments.TxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastTxtUpdateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledocuments.LastTxtUpdateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTxtUpdateDate\' in table \'documents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledocuments.LastTxtUpdateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte[] file_data {
                get {
                    try {
                        return ((byte[])(this[this.tabledocuments.file_dataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'file_data\' in table \'documents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledocuments.file_dataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string file_extension {
                get {
                    return ((string)(this[this.tabledocuments.file_extensionColumn]));
                }
                set {
                    this[this.tabledocuments.file_extensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool hasAtts {
                get {
                    try {
                        return ((bool)(this[this.tabledocuments.hasAttsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hasAtts\' in table \'documents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledocuments.hasAttsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short docType {
                get {
                    return ((short)(this[this.tabledocuments.docTypeColumn]));
                }
                set {
                    this[this.tabledocuments.docTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int whoOpenedForEdit {
                get {
                    return ((int)(this[this.tabledocuments.whoOpenedForEditColumn]));
                }
                set {
                    this[this.tabledocuments.whoOpenedForEditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool isTransferedToSign {
                get {
                    return ((bool)(this[this.tabledocuments.isTransferedToSignColumn]));
                }
                set {
                    this[this.tabledocuments.isTransferedToSignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime dateTransferedToSign {
                get {
                    return ((global::System.DateTime)(this[this.tabledocuments.dateTransferedToSignColumn]));
                }
                set {
                    this[this.tabledocuments.dateTransferedToSignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool isSigned {
                get {
                    return ((bool)(this[this.tabledocuments.isSignedColumn]));
                }
                set {
                    this[this.tabledocuments.isSignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime dateSigned {
                get {
                    return ((global::System.DateTime)(this[this.tabledocuments.dateSignedColumn]));
                }
                set {
                    this[this.tabledocuments.dateSignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int signedAttId {
                get {
                    return ((int)(this[this.tabledocuments.signedAttIdColumn]));
                }
                set {
                    this[this.tabledocuments.signedAttIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTxtNull() {
                return this.IsNull(this.tabledocuments.TxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTxtNull() {
                this[this.tabledocuments.TxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLastTxtUpdateDateNull() {
                return this.IsNull(this.tabledocuments.LastTxtUpdateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLastTxtUpdateDateNull() {
                this[this.tabledocuments.LastTxtUpdateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isfile_dataNull() {
                return this.IsNull(this.tabledocuments.file_dataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setfile_dataNull() {
                this[this.tabledocuments.file_dataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IshasAttsNull() {
                return this.IsNull(this.tabledocuments.hasAttsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SethasAttsNull() {
                this[this.tabledocuments.hasAttsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class documentsSignRow : global::System.Data.DataRow {
            
            private documentsSignDataTable tabledocumentsSign;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal documentsSignRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledocumentsSign = ((documentsSignDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int shotef_mismach {
                get {
                    return ((int)(this[this.tabledocumentsSign.shotef_mismachColumn]));
                }
                set {
                    this[this.tabledocumentsSign.shotef_mismachColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string hanadon {
                get {
                    return ((string)(this[this.tabledocumentsSign.hanadonColumn]));
                }
                set {
                    this[this.tabledocumentsSign.hanadonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tarich_hamichtav {
                get {
                    return ((string)(this[this.tabledocumentsSign.tarich_hamichtavColumn]));
                }
                set {
                    this[this.tabledocumentsSign.tarich_hamichtavColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string teur_tafkid_sholeah {
                get {
                    try {
                        return ((string)(this[this.tabledocumentsSign.teur_tafkid_sholeahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'teur_tafkid_sholeah\' in table \'documentsSign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledocumentsSign.teur_tafkid_sholeahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string user_metaiek {
                get {
                    try {
                        return ((string)(this[this.tabledocumentsSign.user_metaiekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_metaiek\' in table \'documentsSign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledocumentsSign.user_metaiekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool isSigned {
                get {
                    try {
                        return ((bool)(this[this.tabledocumentsSign.isSignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isSigned\' in table \'documentsSign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledocumentsSign.isSignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isteur_tafkid_sholeahNull() {
                return this.IsNull(this.tabledocumentsSign.teur_tafkid_sholeahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setteur_tafkid_sholeahNull() {
                this[this.tabledocumentsSign.teur_tafkid_sholeahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isuser_metaiekNull() {
                return this.IsNull(this.tabledocumentsSign.user_metaiekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setuser_metaiekNull() {
                this[this.tabledocumentsSign.user_metaiekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsisSignedNull() {
                return this.IsNull(this.tabledocumentsSign.isSignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetisSignedNull() {
                this[this.tabledocumentsSign.isSignedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tmtafkiduRow : global::System.Data.DataRow {
            
            private tmtafkiduDataTable tabletmtafkidu;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal tmtafkiduRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletmtafkidu = ((tmtafkiduDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string taor_tpkid {
                get {
                    return ((string)(this[this.tabletmtafkidu.taor_tpkidColumn]));
                }
                set {
                    this[this.tabletmtafkidu.taor_tpkidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string doal {
                get {
                    return ((string)(this[this.tabletmtafkidu.doalColumn]));
                }
                set {
                    this[this.tabletmtafkidu.doalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tabletmtafkidu.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'tmtafkidu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletmtafkidu.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tabletmtafkidu.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFullNameNull() {
                this[this.tabletmtafkidu.FullNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tiukimRow : global::System.Data.DataRow {
            
            private tiukimDataTable tabletiukim;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal tiukimRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletiukim = ((tiukimDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short kod_marechet {
                get {
                    return ((short)(this[this.tabletiukim.kod_marechetColumn]));
                }
                set {
                    this[this.tabletiukim.kod_marechetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int shotef_klali {
                get {
                    return ((int)(this[this.tabletiukim.shotef_klaliColumn]));
                }
                set {
                    this[this.tabletiukim.shotef_klaliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int mispar_nose {
                get {
                    return ((int)(this[this.tabletiukim.mispar_noseColumn]));
                }
                set {
                    this[this.tabletiukim.mispar_noseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool is_rashi {
                get {
                    return ((bool)(this[this.tabletiukim.is_rashiColumn]));
                }
                set {
                    this[this.tabletiukim.is_rashiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int mispar_in_tik {
                get {
                    return ((int)(this[this.tabletiukim.mispar_in_tikColumn]));
                }
                set {
                    this[this.tabletiukim.mispar_in_tikColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class tm_kubiotRowChangeEvent : global::System.EventArgs {
            
            private tm_kubiotRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tm_kubiotRowChangeEvent(tm_kubiotRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tm_kubiotRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class roleTypesRowChangeEvent : global::System.EventArgs {
            
            private roleTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public roleTypesRowChangeEvent(roleTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public roleTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class documentsRowChangeEvent : global::System.EventArgs {
            
            private documentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsRowChangeEvent(documentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class documentsSignRowChangeEvent : global::System.EventArgs {
            
            private documentsSignRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsSignRowChangeEvent(documentsSignRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public documentsSignRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class tmtafkiduRowChangeEvent : global::System.EventArgs {
            
            private tmtafkiduRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tmtafkiduRowChangeEvent(tmtafkiduRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tmtafkiduRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class tiukimRowChangeEvent : global::System.EventArgs {
            
            private tiukimRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tiukimRowChangeEvent(tiukimRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tiukimRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DocumentsModule.MantakDBDataSetDocumentsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tm_kubiotTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public tm_kubiotTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tm_kubiot";
            tableMapping.ColumnMappings.Add("cod_kobyh", "cod_kobyh");
            tableMapping.ColumnMappings.Add("row_0", "row_0");
            tableMapping.ColumnMappings.Add("row_1", "row_1");
            tableMapping.ColumnMappings.Add("row_2", "row_2");
            tableMapping.ColumnMappings.Add("row_3", "row_3");
            tableMapping.ColumnMappings.Add("row_4", "row_4");
            tableMapping.ColumnMappings.Add("row_5", "row_5");
            tableMapping.ColumnMappings.Add("row_6", "row_6");
            tableMapping.ColumnMappings.Add("row_7", "row_7");
            tableMapping.ColumnMappings.Add("row_8", "row_8");
            tableMapping.ColumnMappings.Add("row_9", "row_9");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[tm_kubiot] WHERE (([cod_kobyh] = @Original_cod_kobyh) AND ([row_0] = @Original_row_0) AND ([row_1] = @Original_row_1) AND ([row_2] = @Original_row_2) AND ([row_3] = @Original_row_3) AND ([row_4] = @Original_row_4) AND ([row_5] = @Original_row_5) AND ([row_6] = @Original_row_6) AND ([row_7] = @Original_row_7) AND ([row_8] = @Original_row_8) AND ([row_9] = @Original_row_9))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cod_kobyh", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cod_kobyh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_0", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_0", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[tm_kubiot] ([cod_kobyh], [row_0], [row_1], [row_2], [row_3], [row_4], [row_5], [row_6], [row_7], [row_8], [row_9]) VALUES (@cod_kobyh, @row_0, @row_1, @row_2, @row_3, @row_4, @row_5, @row_6, @row_7, @row_8, @row_9);
SELECT cod_kobyh, row_0, row_1, row_2, row_3, row_4, row_5, row_6, row_7, row_8, row_9 FROM dbo.tm_kubiot WHERE (cod_kobyh = @cod_kobyh)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cod_kobyh", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cod_kobyh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_0", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_0", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[tm_kubiot] SET [cod_kobyh] = @cod_kobyh, [row_0] = @row_0, [row_1] = @row_1, [row_2] = @row_2, [row_3] = @row_3, [row_4] = @row_4, [row_5] = @row_5, [row_6] = @row_6, [row_7] = @row_7, [row_8] = @row_8, [row_9] = @row_9 WHERE (([cod_kobyh] = @Original_cod_kobyh) AND ([row_0] = @Original_row_0) AND ([row_1] = @Original_row_1) AND ([row_2] = @Original_row_2) AND ([row_3] = @Original_row_3) AND ([row_4] = @Original_row_4) AND ([row_5] = @Original_row_5) AND ([row_6] = @Original_row_6) AND ([row_7] = @Original_row_7) AND ([row_8] = @Original_row_8) AND ([row_9] = @Original_row_9));
SELECT cod_kobyh, row_0, row_1, row_2, row_3, row_4, row_5, row_6, row_7, row_8, row_9 FROM dbo.tm_kubiot WHERE (cod_kobyh = @cod_kobyh)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cod_kobyh", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cod_kobyh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_0", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_0", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@row_9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cod_kobyh", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cod_kobyh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_0", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_0", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_row_9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "row_9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
             ;
            this._connection.ConnectionString = "Server=185.145.252.75:24412;Database=MantakApp;User Id=MantakApp;Password=MantakApp;";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cod_kobyh, row_0, row_1, row_2, row_3, row_4, row_5, row_6, row_7, row_8, " +
                "row_9 FROM dbo.tm_kubiot";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MantakDBDataSetDocuments.tm_kubiotDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MantakDBDataSetDocuments.tm_kubiotDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MantakDBDataSetDocuments.tm_kubiotDataTable dataTable = new MantakDBDataSetDocuments.tm_kubiotDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MantakDBDataSetDocuments.tm_kubiotDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MantakDBDataSetDocuments dataSet) {
            return this.Adapter.Update(dataSet, "tm_kubiot");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_cod_kobyh, string Original_row_0, string Original_row_1, string Original_row_2, string Original_row_3, string Original_row_4, string Original_row_5, string Original_row_6, string Original_row_7, string Original_row_8, string Original_row_9) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_cod_kobyh));
            if ((Original_row_0 == null)) {
                throw new global::System.ArgumentNullException("Original_row_0");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_row_0));
            }
            if ((Original_row_1 == null)) {
                throw new global::System.ArgumentNullException("Original_row_1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_row_1));
            }
            if ((Original_row_2 == null)) {
                throw new global::System.ArgumentNullException("Original_row_2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_row_2));
            }
            if ((Original_row_3 == null)) {
                throw new global::System.ArgumentNullException("Original_row_3");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_row_3));
            }
            if ((Original_row_4 == null)) {
                throw new global::System.ArgumentNullException("Original_row_4");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_row_4));
            }
            if ((Original_row_5 == null)) {
                throw new global::System.ArgumentNullException("Original_row_5");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_row_5));
            }
            if ((Original_row_6 == null)) {
                throw new global::System.ArgumentNullException("Original_row_6");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_row_6));
            }
            if ((Original_row_7 == null)) {
                throw new global::System.ArgumentNullException("Original_row_7");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_row_7));
            }
            if ((Original_row_8 == null)) {
                throw new global::System.ArgumentNullException("Original_row_8");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_row_8));
            }
            if ((Original_row_9 == null)) {
                throw new global::System.ArgumentNullException("Original_row_9");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_row_9));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short cod_kobyh, string row_0, string row_1, string row_2, string row_3, string row_4, string row_5, string row_6, string row_7, string row_8, string row_9) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(cod_kobyh));
            if ((row_0 == null)) {
                throw new global::System.ArgumentNullException("row_0");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(row_0));
            }
            if ((row_1 == null)) {
                throw new global::System.ArgumentNullException("row_1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(row_1));
            }
            if ((row_2 == null)) {
                throw new global::System.ArgumentNullException("row_2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(row_2));
            }
            if ((row_3 == null)) {
                throw new global::System.ArgumentNullException("row_3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(row_3));
            }
            if ((row_4 == null)) {
                throw new global::System.ArgumentNullException("row_4");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(row_4));
            }
            if ((row_5 == null)) {
                throw new global::System.ArgumentNullException("row_5");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(row_5));
            }
            if ((row_6 == null)) {
                throw new global::System.ArgumentNullException("row_6");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(row_6));
            }
            if ((row_7 == null)) {
                throw new global::System.ArgumentNullException("row_7");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(row_7));
            }
            if ((row_8 == null)) {
                throw new global::System.ArgumentNullException("row_8");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(row_8));
            }
            if ((row_9 == null)) {
                throw new global::System.ArgumentNullException("row_9");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(row_9));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short cod_kobyh, 
                    string row_0, 
                    string row_1, 
                    string row_2, 
                    string row_3, 
                    string row_4, 
                    string row_5, 
                    string row_6, 
                    string row_7, 
                    string row_8, 
                    string row_9, 
                    short Original_cod_kobyh, 
                    string Original_row_0, 
                    string Original_row_1, 
                    string Original_row_2, 
                    string Original_row_3, 
                    string Original_row_4, 
                    string Original_row_5, 
                    string Original_row_6, 
                    string Original_row_7, 
                    string Original_row_8, 
                    string Original_row_9) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(cod_kobyh));
            if ((row_0 == null)) {
                throw new global::System.ArgumentNullException("row_0");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(row_0));
            }
            if ((row_1 == null)) {
                throw new global::System.ArgumentNullException("row_1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(row_1));
            }
            if ((row_2 == null)) {
                throw new global::System.ArgumentNullException("row_2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(row_2));
            }
            if ((row_3 == null)) {
                throw new global::System.ArgumentNullException("row_3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(row_3));
            }
            if ((row_4 == null)) {
                throw new global::System.ArgumentNullException("row_4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(row_4));
            }
            if ((row_5 == null)) {
                throw new global::System.ArgumentNullException("row_5");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(row_5));
            }
            if ((row_6 == null)) {
                throw new global::System.ArgumentNullException("row_6");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(row_6));
            }
            if ((row_7 == null)) {
                throw new global::System.ArgumentNullException("row_7");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(row_7));
            }
            if ((row_8 == null)) {
                throw new global::System.ArgumentNullException("row_8");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(row_8));
            }
            if ((row_9 == null)) {
                throw new global::System.ArgumentNullException("row_9");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(row_9));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((short)(Original_cod_kobyh));
            if ((Original_row_0 == null)) {
                throw new global::System.ArgumentNullException("Original_row_0");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_row_0));
            }
            if ((Original_row_1 == null)) {
                throw new global::System.ArgumentNullException("Original_row_1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_row_1));
            }
            if ((Original_row_2 == null)) {
                throw new global::System.ArgumentNullException("Original_row_2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_row_2));
            }
            if ((Original_row_3 == null)) {
                throw new global::System.ArgumentNullException("Original_row_3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_row_3));
            }
            if ((Original_row_4 == null)) {
                throw new global::System.ArgumentNullException("Original_row_4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_row_4));
            }
            if ((Original_row_5 == null)) {
                throw new global::System.ArgumentNullException("Original_row_5");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_row_5));
            }
            if ((Original_row_6 == null)) {
                throw new global::System.ArgumentNullException("Original_row_6");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_row_6));
            }
            if ((Original_row_7 == null)) {
                throw new global::System.ArgumentNullException("Original_row_7");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_row_7));
            }
            if ((Original_row_8 == null)) {
                throw new global::System.ArgumentNullException("Original_row_8");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_row_8));
            }
            if ((Original_row_9 == null)) {
                throw new global::System.ArgumentNullException("Original_row_9");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_row_9));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string row_0, 
                    string row_1, 
                    string row_2, 
                    string row_3, 
                    string row_4, 
                    string row_5, 
                    string row_6, 
                    string row_7, 
                    string row_8, 
                    string row_9, 
                    short Original_cod_kobyh, 
                    string Original_row_0, 
                    string Original_row_1, 
                    string Original_row_2, 
                    string Original_row_3, 
                    string Original_row_4, 
                    string Original_row_5, 
                    string Original_row_6, 
                    string Original_row_7, 
                    string Original_row_8, 
                    string Original_row_9) {
            return this.Update(Original_cod_kobyh, row_0, row_1, row_2, row_3, row_4, row_5, row_6, row_7, row_8, row_9, Original_cod_kobyh, Original_row_0, Original_row_1, Original_row_2, Original_row_3, Original_row_4, Original_row_5, Original_row_6, Original_row_7, Original_row_8, Original_row_9);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class roleTypesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public roleTypesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "roleTypes";
            tableMapping.ColumnMappings.Add("roleTypeCode", "roleTypeCode");
            tableMapping.ColumnMappings.Add("roleType", "roleType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[roleTypes] ([roleTypeCode], [roleType]) VALUES (@roleTypeCode," +
                " @roleType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@roleTypeCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "roleTypeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@roleType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "roleType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Server=185.145.252.75:24412;Database=MantakApp;User Id=MantakApp;Password=MantakApp;";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT roleTypeCode, roleType FROM dbo.roleTypes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MantakDBDataSetDocuments.roleTypesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MantakDBDataSetDocuments.roleTypesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MantakDBDataSetDocuments.roleTypesDataTable dataTable = new MantakDBDataSetDocuments.roleTypesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MantakDBDataSetDocuments.roleTypesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MantakDBDataSetDocuments dataSet) {
            return this.Adapter.Update(dataSet, "roleTypes");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short roleTypeCode, string roleType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(roleTypeCode));
            if ((roleType == null)) {
                throw new global::System.ArgumentNullException("roleType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(roleType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class documentsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public documentsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "documents";
            tableMapping.ColumnMappings.Add("shotef_mismach", "shotef_mismach");
            tableMapping.ColumnMappings.Add("mismach_or_kovetz", "mismach_or_kovetz");
            tableMapping.ColumnMappings.Add("hanadon", "hanadon");
            tableMapping.ColumnMappings.Add("is_nichnas", "is_nichnas");
            tableMapping.ColumnMappings.Add("shotef_nichnas_yotze", "shotef_nichnas_yotze");
            tableMapping.ColumnMappings.Add("tarich_hamichtav", "tarich_hamichtav");
            tableMapping.ColumnMappings.Add("tarich_hazana", "tarich_hazana");
            tableMapping.ColumnMappings.Add("zman_hazana", "zman_hazana");
            tableMapping.ColumnMappings.Add("kod_sholeah", "kod_sholeah");
            tableMapping.ColumnMappings.Add("teur_tafkid_sholeah", "teur_tafkid_sholeah");
            tableMapping.ColumnMappings.Add("simuchin", "simuchin");
            tableMapping.ColumnMappings.Add("simuchin_metzumtzam", "simuchin_metzumtzam");
            tableMapping.ColumnMappings.Add("kod_sivug_bitchoni", "kod_sivug_bitchoni");
            tableMapping.ColumnMappings.Add("kod_meabed_tamlilim", "kod_meabed_tamlilim");
            tableMapping.ColumnMappings.Add("msd_template", "msd_template");
            tableMapping.ColumnMappings.Add("is_kayam", "is_kayam");
            tableMapping.ColumnMappings.Add("is_hufatz", "is_hufatz");
            tableMapping.ColumnMappings.Add("tarich_hafatza", "tarich_hafatza");
            tableMapping.ColumnMappings.Add("is_pail", "is_pail");
            tableMapping.ColumnMappings.Add("makor", "makor");
            tableMapping.ColumnMappings.Add("asmachta_makor", "asmachta_makor");
            tableMapping.ColumnMappings.Add("hearot", "hearot");
            tableMapping.ColumnMappings.Add("msd_proiect", "msd_proiect");
            tableMapping.ColumnMappings.Add("is_hasum", "is_hasum");
            tableMapping.ColumnMappings.Add("is_rapat", "is_rapat");
            tableMapping.ColumnMappings.Add("is_sodi", "is_sodi");
            tableMapping.ColumnMappings.Add("user_metaiek", "user_metaiek");
            tableMapping.ColumnMappings.Add("Txt", "Txt");
            tableMapping.ColumnMappings.Add("LastTxtUpdateDate", "LastTxtUpdateDate");
            tableMapping.ColumnMappings.Add("file_data", "file_data");
            tableMapping.ColumnMappings.Add("file_extension", "file_extension");
            tableMapping.ColumnMappings.Add("hasAtts", "hasAtts");
            tableMapping.ColumnMappings.Add("docType", "docType");
            tableMapping.ColumnMappings.Add("whoOpenedForEdit", "whoOpenedForEdit");
            tableMapping.ColumnMappings.Add("isTransferedToSign", "isTransferedToSign");
            tableMapping.ColumnMappings.Add("dateTransferedToSign", "dateTransferedToSign");
            tableMapping.ColumnMappings.Add("isSigned", "isSigned");
            tableMapping.ColumnMappings.Add("dateSigned", "dateSigned");
            tableMapping.ColumnMappings.Add("signedAttId", "signedAttId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[documents] WHERE (([shotef_mismach] = @Original_shotef_mismach" +
                ") AND ([mismach_or_kovetz] = @Original_mismach_or_kovetz) AND ([hanadon] = @Orig" +
                "inal_hanadon) AND ([is_nichnas] = @Original_is_nichnas) AND ([shotef_nichnas_yot" +
                "ze] = @Original_shotef_nichnas_yotze) AND ([tarich_hamichtav] = @Original_tarich" +
                "_hamichtav) AND ([tarich_hazana] = @Original_tarich_hazana) AND ([zman_hazana] =" +
                " @Original_zman_hazana) AND ([kod_sholeah] = @Original_kod_sholeah) AND ([teur_t" +
                "afkid_sholeah] = @Original_teur_tafkid_sholeah) AND ([simuchin] = @Original_simu" +
                "chin) AND ([simuchin_metzumtzam] = @Original_simuchin_metzumtzam) AND ([kod_sivu" +
                "g_bitchoni] = @Original_kod_sivug_bitchoni) AND ([kod_meabed_tamlilim] = @Origin" +
                "al_kod_meabed_tamlilim) AND ([msd_template] = @Original_msd_template) AND ([is_k" +
                "ayam] = @Original_is_kayam) AND ([is_hufatz] = @Original_is_hufatz) AND ([tarich" +
                "_hafatza] = @Original_tarich_hafatza) AND ([is_pail] = @Original_is_pail) AND ([" +
                "makor] = @Original_makor) AND ([asmachta_makor] = @Original_asmachta_makor) AND " +
                "([msd_proiect] = @Original_msd_proiect) AND ([is_hasum] = @Original_is_hasum) AN" +
                "D ([is_rapat] = @Original_is_rapat) AND ([is_sodi] = @Original_is_sodi) AND ([us" +
                "er_metaiek] = @Original_user_metaiek) AND ((@IsNull_LastTxtUpdateDate = 1 AND [L" +
                "astTxtUpdateDate] IS NULL) OR ([LastTxtUpdateDate] = @Original_LastTxtUpdateDate" +
                ")) AND ([file_extension] = @Original_file_extension) AND ((@IsNull_hasAtts = 1 A" +
                "ND [hasAtts] IS NULL) OR ([hasAtts] = @Original_hasAtts)) AND ([docType] = @Orig" +
                "inal_docType) AND ([whoOpenedForEdit] = @Original_whoOpenedForEdit) AND ([isTran" +
                "sferedToSign] = @Original_isTransferedToSign) AND ([dateTransferedToSign] = @Ori" +
                "ginal_dateTransferedToSign) AND ([isSigned] = @Original_isSigned) AND ([dateSign" +
                "ed] = @Original_dateSigned) AND ([signedAttId] = @Original_signedAttId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shotef_mismach", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mismach_or_kovetz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mismach_or_kovetz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hanadon", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hanadon", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_nichnas", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_nichnas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shotef_nichnas_yotze", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_nichnas_yotze", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tarich_hamichtav", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hamichtav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tarich_hazana", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hazana", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zman_hazana", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zman_hazana", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod_sholeah", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sholeah", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_teur_tafkid_sholeah", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "teur_tafkid_sholeah", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_simuchin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "simuchin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_simuchin_metzumtzam", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "simuchin_metzumtzam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod_sivug_bitchoni", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sivug_bitchoni", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod_meabed_tamlilim", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_meabed_tamlilim", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_msd_template", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "msd_template", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_kayam", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_kayam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_hufatz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_hufatz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tarich_hafatza", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hafatza", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_pail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_makor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "makor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_asmachta_makor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "asmachta_makor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_msd_proiect", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "msd_proiect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_hasum", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_hasum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_rapat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_rapat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_sodi", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_sodi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_metaiek", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_metaiek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTxtUpdateDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTxtUpdateDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTxtUpdateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTxtUpdateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_file_extension", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "file_extension", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hasAtts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hasAtts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hasAtts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hasAtts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_docType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "docType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_whoOpenedForEdit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "whoOpenedForEdit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isTransferedToSign", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isTransferedToSign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dateTransferedToSign", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateTransferedToSign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isSigned", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dateSigned", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateSigned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_signedAttId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "signedAttId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[documents] ([shotef_mismach], [mismach_or_kovetz], [hanadon], " +
                "[is_nichnas], [shotef_nichnas_yotze], [tarich_hamichtav], [tarich_hazana], [zman" +
                "_hazana], [kod_sholeah], [teur_tafkid_sholeah], [simuchin], [simuchin_metzumtzam" +
                "], [kod_sivug_bitchoni], [kod_meabed_tamlilim], [msd_template], [is_kayam], [is_" +
                "hufatz], [tarich_hafatza], [is_pail], [makor], [asmachta_makor], [hearot], [msd_" +
                "proiect], [is_hasum], [is_rapat], [is_sodi], [user_metaiek], [Txt], [LastTxtUpda" +
                "teDate], [file_data], [file_extension], [docType], [whoOpenedForEdit], [isTransf" +
                "eredToSign], [dateTransferedToSign], [isSigned], [dateSigned], [signedAttId]) VA" +
                "LUES (@shotef_mismach, @mismach_or_kovetz, @hanadon, @is_nichnas, @shotef_nichna" +
                "s_yotze, @tarich_hamichtav, @tarich_hazana, @zman_hazana, @kod_sholeah, @teur_ta" +
                "fkid_sholeah, @simuchin, @simuchin_metzumtzam, @kod_sivug_bitchoni, @kod_meabed_" +
                "tamlilim, @msd_template, @is_kayam, @is_hufatz, @tarich_hafatza, @is_pail, @mako" +
                "r, @asmachta_makor, @hearot, @msd_proiect, @is_hasum, @is_rapat, @is_sodi, @user" +
                "_metaiek, @Txt, @LastTxtUpdateDate, @file_data, @file_extension, @docType, @whoO" +
                "penedForEdit, @isTransferedToSign, @dateTransferedToSign, @isSigned, @dateSigned" +
                ", @signedAttId);\r\nSELECT shotef_mismach, mismach_or_kovetz, hanadon, is_nichnas," +
                " shotef_nichnas_yotze, tarich_hamichtav, tarich_hazana, zman_hazana, kod_sholeah" +
                ", teur_tafkid_sholeah, simuchin, simuchin_metzumtzam, kod_sivug_bitchoni, kod_me" +
                "abed_tamlilim, msd_template, is_kayam, is_hufatz, tarich_hafatza, is_pail, makor" +
                ", asmachta_makor, hearot, msd_proiect, is_hasum, is_rapat, is_sodi, user_metaiek" +
                ", Txt, LastTxtUpdateDate, file_data, file_extension, hasAtts, docType, whoOpened" +
                "ForEdit, isTransferedToSign, dateTransferedToSign, isSigned, dateSigned, signedA" +
                "ttId FROM dbo.documents WHERE (shotef_mismach = @shotef_mismach)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shotef_mismach", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mismach_or_kovetz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mismach_or_kovetz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hanadon", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hanadon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_nichnas", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_nichnas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shotef_nichnas_yotze", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_nichnas_yotze", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tarich_hamichtav", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hamichtav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tarich_hazana", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hazana", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zman_hazana", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zman_hazana", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod_sholeah", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sholeah", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@teur_tafkid_sholeah", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "teur_tafkid_sholeah", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@simuchin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "simuchin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@simuchin_metzumtzam", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "simuchin_metzumtzam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod_sivug_bitchoni", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sivug_bitchoni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod_meabed_tamlilim", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_meabed_tamlilim", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@msd_template", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "msd_template", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_kayam", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_kayam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_hufatz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_hufatz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tarich_hafatza", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hafatza", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_pail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@makor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "makor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@asmachta_makor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "asmachta_makor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hearot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hearot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@msd_proiect", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "msd_proiect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_hasum", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_hasum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_rapat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_rapat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_sodi", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_sodi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_metaiek", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_metaiek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Txt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Txt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTxtUpdateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTxtUpdateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@file_data", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "file_data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@file_extension", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "file_extension", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@docType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "docType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@whoOpenedForEdit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "whoOpenedForEdit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isTransferedToSign", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isTransferedToSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateTransferedToSign", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateTransferedToSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSigned", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateSigned", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@signedAttId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "signedAttId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[documents] SET [shotef_mismach] = @shotef_mismach, [mismach_or_kove" +
                "tz] = @mismach_or_kovetz, [hanadon] = @hanadon, [is_nichnas] = @is_nichnas, [sho" +
                "tef_nichnas_yotze] = @shotef_nichnas_yotze, [tarich_hamichtav] = @tarich_hamicht" +
                "av, [tarich_hazana] = @tarich_hazana, [zman_hazana] = @zman_hazana, [kod_sholeah" +
                "] = @kod_sholeah, [teur_tafkid_sholeah] = @teur_tafkid_sholeah, [simuchin] = @si" +
                "muchin, [simuchin_metzumtzam] = @simuchin_metzumtzam, [kod_sivug_bitchoni] = @ko" +
                "d_sivug_bitchoni, [kod_meabed_tamlilim] = @kod_meabed_tamlilim, [msd_template] =" +
                " @msd_template, [is_kayam] = @is_kayam, [is_hufatz] = @is_hufatz, [tarich_hafatz" +
                "a] = @tarich_hafatza, [is_pail] = @is_pail, [makor] = @makor, [asmachta_makor] =" +
                " @asmachta_makor, [hearot] = @hearot, [msd_proiect] = @msd_proiect, [is_hasum] =" +
                " @is_hasum, [is_rapat] = @is_rapat, [is_sodi] = @is_sodi, [user_metaiek] = @user" +
                "_metaiek, [Txt] = @Txt, [LastTxtUpdateDate] = @LastTxtUpdateDate, [file_data] = " +
                "@file_data, [file_extension] = @file_extension, [docType] = @docType, [whoOpened" +
                "ForEdit] = @whoOpenedForEdit, [isTransferedToSign] = @isTransferedToSign, [dateT" +
                "ransferedToSign] = @dateTransferedToSign, [isSigned] = @isSigned, [dateSigned] =" +
                " @dateSigned, [signedAttId] = @signedAttId WHERE (([shotef_mismach] = @Original_" +
                "shotef_mismach) AND ([mismach_or_kovetz] = @Original_mismach_or_kovetz) AND ([ha" +
                "nadon] = @Original_hanadon) AND ([is_nichnas] = @Original_is_nichnas) AND ([shot" +
                "ef_nichnas_yotze] = @Original_shotef_nichnas_yotze) AND ([tarich_hamichtav] = @O" +
                "riginal_tarich_hamichtav) AND ([tarich_hazana] = @Original_tarich_hazana) AND ([" +
                "zman_hazana] = @Original_zman_hazana) AND ([kod_sholeah] = @Original_kod_sholeah" +
                ") AND ([teur_tafkid_sholeah] = @Original_teur_tafkid_sholeah) AND ([simuchin] = " +
                "@Original_simuchin) AND ([simuchin_metzumtzam] = @Original_simuchin_metzumtzam) " +
                "AND ([kod_sivug_bitchoni] = @Original_kod_sivug_bitchoni) AND ([kod_meabed_tamli" +
                "lim] = @Original_kod_meabed_tamlilim) AND ([msd_template] = @Original_msd_templa" +
                "te) AND ([is_kayam] = @Original_is_kayam) AND ([is_hufatz] = @Original_is_hufatz" +
                ") AND ([tarich_hafatza] = @Original_tarich_hafatza) AND ([is_pail] = @Original_i" +
                "s_pail) AND ([makor] = @Original_makor) AND ([asmachta_makor] = @Original_asmach" +
                "ta_makor) AND ([msd_proiect] = @Original_msd_proiect) AND ([is_hasum] = @Origina" +
                "l_is_hasum) AND ([is_rapat] = @Original_is_rapat) AND ([is_sodi] = @Original_is_" +
                "sodi) AND ([user_metaiek] = @Original_user_metaiek) AND ((@IsNull_LastTxtUpdateD" +
                "ate = 1 AND [LastTxtUpdateDate] IS NULL) OR ([LastTxtUpdateDate] = @Original_Las" +
                "tTxtUpdateDate)) AND ([file_extension] = @Original_file_extension) AND ((@IsNull" +
                "_hasAtts = 1 AND [hasAtts] IS NULL) OR ([hasAtts] = @Original_hasAtts)) AND ([do" +
                "cType] = @Original_docType) AND ([whoOpenedForEdit] = @Original_whoOpenedForEdit" +
                ") AND ([isTransferedToSign] = @Original_isTransferedToSign) AND ([dateTransfered" +
                "ToSign] = @Original_dateTransferedToSign) AND ([isSigned] = @Original_isSigned) " +
                "AND ([dateSigned] = @Original_dateSigned) AND ([signedAttId] = @Original_signedA" +
                "ttId));\r\nSELECT shotef_mismach, mismach_or_kovetz, hanadon, is_nichnas, shotef_n" +
                "ichnas_yotze, tarich_hamichtav, tarich_hazana, zman_hazana, kod_sholeah, teur_ta" +
                "fkid_sholeah, simuchin, simuchin_metzumtzam, kod_sivug_bitchoni, kod_meabed_taml" +
                "ilim, msd_template, is_kayam, is_hufatz, tarich_hafatza, is_pail, makor, asmacht" +
                "a_makor, hearot, msd_proiect, is_hasum, is_rapat, is_sodi, user_metaiek, Txt, La" +
                "stTxtUpdateDate, file_data, file_extension, hasAtts, docType, whoOpenedForEdit, " +
                "isTransferedToSign, dateTransferedToSign, isSigned, dateSigned, signedAttId FROM" +
                " dbo.documents WHERE (shotef_mismach = @shotef_mismach)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shotef_mismach", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mismach_or_kovetz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mismach_or_kovetz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hanadon", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hanadon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_nichnas", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_nichnas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shotef_nichnas_yotze", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_nichnas_yotze", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tarich_hamichtav", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hamichtav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tarich_hazana", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hazana", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zman_hazana", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zman_hazana", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod_sholeah", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sholeah", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@teur_tafkid_sholeah", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "teur_tafkid_sholeah", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@simuchin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "simuchin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@simuchin_metzumtzam", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "simuchin_metzumtzam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod_sivug_bitchoni", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sivug_bitchoni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod_meabed_tamlilim", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_meabed_tamlilim", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@msd_template", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "msd_template", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_kayam", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_kayam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_hufatz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_hufatz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tarich_hafatza", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hafatza", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_pail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@makor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "makor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@asmachta_makor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "asmachta_makor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hearot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hearot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@msd_proiect", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "msd_proiect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_hasum", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_hasum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_rapat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_rapat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_sodi", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_sodi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_metaiek", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_metaiek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Txt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Txt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTxtUpdateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTxtUpdateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@file_data", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "file_data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@file_extension", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "file_extension", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@docType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "docType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@whoOpenedForEdit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "whoOpenedForEdit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isTransferedToSign", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isTransferedToSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateTransferedToSign", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateTransferedToSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSigned", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateSigned", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@signedAttId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "signedAttId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shotef_mismach", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mismach_or_kovetz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mismach_or_kovetz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hanadon", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hanadon", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_nichnas", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_nichnas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shotef_nichnas_yotze", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_nichnas_yotze", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tarich_hamichtav", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hamichtav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tarich_hazana", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hazana", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zman_hazana", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zman_hazana", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod_sholeah", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sholeah", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_teur_tafkid_sholeah", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "teur_tafkid_sholeah", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_simuchin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "simuchin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_simuchin_metzumtzam", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "simuchin_metzumtzam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod_sivug_bitchoni", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sivug_bitchoni", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod_meabed_tamlilim", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_meabed_tamlilim", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_msd_template", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "msd_template", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_kayam", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_kayam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_hufatz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_hufatz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tarich_hafatza", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hafatza", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_pail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_makor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "makor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_asmachta_makor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "asmachta_makor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_msd_proiect", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "msd_proiect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_hasum", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_hasum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_rapat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_rapat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_sodi", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_sodi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_metaiek", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_metaiek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTxtUpdateDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTxtUpdateDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTxtUpdateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTxtUpdateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_file_extension", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "file_extension", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hasAtts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hasAtts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hasAtts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hasAtts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_docType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "docType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_whoOpenedForEdit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "whoOpenedForEdit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isTransferedToSign", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isTransferedToSign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dateTransferedToSign", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateTransferedToSign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isSigned", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dateSigned", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateSigned", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_signedAttId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "signedAttId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Server=185.145.252.75:24412;Database=MantakApp;User Id=MantakApp;Password=MantakApp;";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT  shotef_mismach, mismach_or_kovetz, hanadon, is_nichnas, shotef_nichnas_yotze, tarich_hamichtav, tarich_hazana, zman_hazana, kod_sholeah, teur_tafkid_sholeah, simuchin, 
               simuchin_metzumtzam, kod_sivug_bitchoni, kod_meabed_tamlilim, msd_template, is_kayam, is_hufatz, tarich_hafatza, is_pail, makor, asmachta_makor, hearot, msd_proiect, 
               is_hasum, is_rapat, is_sodi, user_metaiek, Txt, LastTxtUpdateDate, file_data, file_extension, hasAtts, docType, whoOpenedForEdit, isTransferedToSign, dateTransferedToSign, 
               isSigned, dateSigned, signedAttId
FROM     dbo.documents";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT  LastTxtUpdateDate, Txt, asmachta_makor, dateSigned, dateTransferedToSign, docType, file_data, file_extension, hanadon, hasAtts, hearot, isSigned, isTransferedToSign, is_hasum, 
               is_hufatz, is_kayam, is_nichnas, is_pail, is_rapat, is_sodi, kod_meabed_tamlilim, kod_sholeah, kod_sivug_bitchoni, makor, mismach_or_kovetz, msd_proiect, msd_template, 
               shotef_mismach, shotef_nichnas_yotze, signedAttId, simuchin, simuchin_metzumtzam, tarich_hafatza, tarich_hamichtav, tarich_hazana, teur_tafkid_sholeah, user_metaiek, 
               whoOpenedForEdit, zman_hazana
FROM     dbo.documents
WHERE  (isSigned = @isSigned) AND (is_nichnas = 0) AND (is_hufatz = @isPublished) AND (file_data IS NOT NULL) AND (is_pail = @isActive)
ORDER BY kod_sholeah";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSigned", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPublished", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_hufatz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isActive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT  LastTxtUpdateDate, Txt, asmachta_makor, dateSigned, dateTransferedToSign, docType, file_data, file_extension, hanadon, hasAtts, hearot, isSigned, isTransferedToSign, is_hasum, 
               is_hufatz, is_kayam, is_nichnas, is_pail, is_rapat, is_sodi, kod_meabed_tamlilim, kod_sholeah, kod_sivug_bitchoni, makor, mismach_or_kovetz, msd_proiect, msd_template, 
               shotef_mismach, shotef_nichnas_yotze, signedAttId, simuchin, simuchin_metzumtzam, tarich_hafatza, tarich_hamichtav, tarich_hazana, teur_tafkid_sholeah, user_metaiek, 
               whoOpenedForEdit, zman_hazana
FROM     dbo.documents
WHERE  (isTransferedToSign = @isTransferedToSign) AND (isSigned = @isSigned) AND (is_nichnas = 0) AND (file_data IS NOT NULL) AND (is_pail = @isActive)
ORDER BY kod_sholeah";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isTransferedToSign", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isTransferedToSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSigned", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isActive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT  shotef_mismach, mismach_or_kovetz, hanadon, is_nichnas, shotef_nichnas_yotze, tarich_hamichtav, tarich_hazana, zman_hazana, kod_sholeah, teur_tafkid_sholeah, simuchin, 
               simuchin_metzumtzam, kod_sivug_bitchoni, kod_meabed_tamlilim, msd_template, is_kayam, is_hufatz, tarich_hafatza, is_pail, makor, asmachta_makor, hearot, msd_proiect, 
               is_hasum, is_rapat, is_sodi, user_metaiek, Txt, LastTxtUpdateDate, file_data, file_extension, hasAtts, docType, whoOpenedForEdit, isTransferedToSign, dateTransferedToSign, 
               isSigned, dateSigned, signedAttId
FROM     dbo.documents
WHERE  (shotef_mismach = @id)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT  shotef_mismach, kod_sholeah, kod_sivug_bitchoni, hearot, msd_proiect\r\nFRO" +
                "M     dbo.documents\r\nWHERE  (shotef_mismach = @docId)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@docId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MantakDBDataSetDocuments.documentsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MantakDBDataSetDocuments.documentsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MantakDBDataSetDocuments.documentsDataTable dataTable = new MantakDBDataSetDocuments.documentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAllToPublish(MantakDBDataSetDocuments.documentsDataTable dataTable, bool isSigned, bool isPublished, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isActive));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsDataTable GetDataAllToPublish(bool isSigned, bool isPublished, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isActive));
            MantakDBDataSetDocuments.documentsDataTable dataTable = new MantakDBDataSetDocuments.documentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAllToSign(MantakDBDataSetDocuments.documentsDataTable dataTable, bool isTransferedToSign, bool isSigned, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isTransferedToSign));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isActive));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsDataTable GetDataAllToSign(bool isTransferedToSign, bool isSigned, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isTransferedToSign));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isActive));
            MantakDBDataSetDocuments.documentsDataTable dataTable = new MantakDBDataSetDocuments.documentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillById(MantakDBDataSetDocuments.documentsDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsDataTable GetDataById(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            MantakDBDataSetDocuments.documentsDataTable dataTable = new MantakDBDataSetDocuments.documentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillForCopy(MantakDBDataSetDocuments.documentsDataTable dataTable, int docId) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(docId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsDataTable GetDataForCopy(int docId) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(docId));
            MantakDBDataSetDocuments.documentsDataTable dataTable = new MantakDBDataSetDocuments.documentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MantakDBDataSetDocuments.documentsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MantakDBDataSetDocuments dataSet) {
            return this.Adapter.Update(dataSet, "documents");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_shotef_mismach, 
                    bool Original_mismach_or_kovetz, 
                    string Original_hanadon, 
                    bool Original_is_nichnas, 
                    int Original_shotef_nichnas_yotze, 
                    string Original_tarich_hamichtav, 
                    string Original_tarich_hazana, 
                    string Original_zman_hazana, 
                    int Original_kod_sholeah, 
                    string Original_teur_tafkid_sholeah, 
                    string Original_simuchin, 
                    string Original_simuchin_metzumtzam, 
                    short Original_kod_sivug_bitchoni, 
                    short Original_kod_meabed_tamlilim, 
                    short Original_msd_template, 
                    bool Original_is_kayam, 
                    bool Original_is_hufatz, 
                    string Original_tarich_hafatza, 
                    bool Original_is_pail, 
                    string Original_makor, 
                    string Original_asmachta_makor, 
                    short Original_msd_proiect, 
                    bool Original_is_hasum, 
                    bool Original_is_rapat, 
                    bool Original_is_sodi, 
                    string Original_user_metaiek, 
                    global::System.Nullable<global::System.DateTime> Original_LastTxtUpdateDate, 
                    string Original_file_extension, 
                    global::System.Nullable<bool> Original_hasAtts, 
                    short Original_docType, 
                    int Original_whoOpenedForEdit, 
                    bool Original_isTransferedToSign, 
                    System.DateTime Original_dateTransferedToSign, 
                    bool Original_isSigned, 
                    System.DateTime Original_dateSigned, 
                    int Original_signedAttId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_shotef_mismach));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((bool)(Original_mismach_or_kovetz));
            if ((Original_hanadon == null)) {
                throw new global::System.ArgumentNullException("Original_hanadon");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_hanadon));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_is_nichnas));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_shotef_nichnas_yotze));
            if ((Original_tarich_hamichtav == null)) {
                throw new global::System.ArgumentNullException("Original_tarich_hamichtav");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_tarich_hamichtav));
            }
            if ((Original_tarich_hazana == null)) {
                throw new global::System.ArgumentNullException("Original_tarich_hazana");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_tarich_hazana));
            }
            if ((Original_zman_hazana == null)) {
                throw new global::System.ArgumentNullException("Original_zman_hazana");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_zman_hazana));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_kod_sholeah));
            if ((Original_teur_tafkid_sholeah == null)) {
                throw new global::System.ArgumentNullException("Original_teur_tafkid_sholeah");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_teur_tafkid_sholeah));
            }
            if ((Original_simuchin == null)) {
                throw new global::System.ArgumentNullException("Original_simuchin");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_simuchin));
            }
            if ((Original_simuchin_metzumtzam == null)) {
                throw new global::System.ArgumentNullException("Original_simuchin_metzumtzam");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_simuchin_metzumtzam));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_kod_sivug_bitchoni));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((short)(Original_kod_meabed_tamlilim));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((short)(Original_msd_template));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_is_kayam));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_is_hufatz));
            if ((Original_tarich_hafatza == null)) {
                throw new global::System.ArgumentNullException("Original_tarich_hafatza");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_tarich_hafatza));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_is_pail));
            if ((Original_makor == null)) {
                throw new global::System.ArgumentNullException("Original_makor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_makor));
            }
            if ((Original_asmachta_makor == null)) {
                throw new global::System.ArgumentNullException("Original_asmachta_makor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_asmachta_makor));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((short)(Original_msd_proiect));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_is_hasum));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((bool)(Original_is_rapat));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_is_sodi));
            if ((Original_user_metaiek == null)) {
                throw new global::System.ArgumentNullException("Original_user_metaiek");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_user_metaiek));
            }
            if ((Original_LastTxtUpdateDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_LastTxtUpdateDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_file_extension == null)) {
                throw new global::System.ArgumentNullException("Original_file_extension");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_file_extension));
            }
            if ((Original_hasAtts.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_hasAtts.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[31].Value = ((short)(Original_docType));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_whoOpenedForEdit));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((bool)(Original_isTransferedToSign));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_dateTransferedToSign));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((bool)(Original_isSigned));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((System.DateTime)(Original_dateSigned));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((int)(Original_signedAttId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int shotef_mismach, 
                    bool mismach_or_kovetz, 
                    string hanadon, 
                    bool is_nichnas, 
                    int shotef_nichnas_yotze, 
                    string tarich_hamichtav, 
                    string tarich_hazana, 
                    string zman_hazana, 
                    int kod_sholeah, 
                    string teur_tafkid_sholeah, 
                    string simuchin, 
                    string simuchin_metzumtzam, 
                    short kod_sivug_bitchoni, 
                    short kod_meabed_tamlilim, 
                    short msd_template, 
                    bool is_kayam, 
                    bool is_hufatz, 
                    string tarich_hafatza, 
                    bool is_pail, 
                    string makor, 
                    string asmachta_makor, 
                    string hearot, 
                    short msd_proiect, 
                    bool is_hasum, 
                    bool is_rapat, 
                    bool is_sodi, 
                    string user_metaiek, 
                    string Txt, 
                    global::System.Nullable<global::System.DateTime> LastTxtUpdateDate, 
                    byte[] file_data, 
                    string file_extension, 
                    short docType, 
                    int whoOpenedForEdit, 
                    bool isTransferedToSign, 
                    System.DateTime dateTransferedToSign, 
                    bool isSigned, 
                    System.DateTime dateSigned, 
                    int signedAttId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(shotef_mismach));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(mismach_or_kovetz));
            if ((hanadon == null)) {
                throw new global::System.ArgumentNullException("hanadon");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(hanadon));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(is_nichnas));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(shotef_nichnas_yotze));
            if ((tarich_hamichtav == null)) {
                throw new global::System.ArgumentNullException("tarich_hamichtav");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(tarich_hamichtav));
            }
            if ((tarich_hazana == null)) {
                throw new global::System.ArgumentNullException("tarich_hazana");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(tarich_hazana));
            }
            if ((zman_hazana == null)) {
                throw new global::System.ArgumentNullException("zman_hazana");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(zman_hazana));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(kod_sholeah));
            if ((teur_tafkid_sholeah == null)) {
                throw new global::System.ArgumentNullException("teur_tafkid_sholeah");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(teur_tafkid_sholeah));
            }
            if ((simuchin == null)) {
                throw new global::System.ArgumentNullException("simuchin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(simuchin));
            }
            if ((simuchin_metzumtzam == null)) {
                throw new global::System.ArgumentNullException("simuchin_metzumtzam");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(simuchin_metzumtzam));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((short)(kod_sivug_bitchoni));
            this.Adapter.InsertCommand.Parameters[13].Value = ((short)(kod_meabed_tamlilim));
            this.Adapter.InsertCommand.Parameters[14].Value = ((short)(msd_template));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(is_kayam));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(is_hufatz));
            if ((tarich_hafatza == null)) {
                throw new global::System.ArgumentNullException("tarich_hafatza");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(tarich_hafatza));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(is_pail));
            if ((makor == null)) {
                throw new global::System.ArgumentNullException("makor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(makor));
            }
            if ((asmachta_makor == null)) {
                throw new global::System.ArgumentNullException("asmachta_makor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(asmachta_makor));
            }
            if ((hearot == null)) {
                throw new global::System.ArgumentNullException("hearot");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(hearot));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((short)(msd_proiect));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(is_hasum));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(is_rapat));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(is_sodi));
            if ((user_metaiek == null)) {
                throw new global::System.ArgumentNullException("user_metaiek");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(user_metaiek));
            }
            if ((Txt == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Txt));
            }
            if ((LastTxtUpdateDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(LastTxtUpdateDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((file_data == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((byte[])(file_data));
            }
            if ((file_extension == null)) {
                throw new global::System.ArgumentNullException("file_extension");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(file_extension));
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((short)(docType));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(whoOpenedForEdit));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(isTransferedToSign));
            this.Adapter.InsertCommand.Parameters[34].Value = ((System.DateTime)(dateTransferedToSign));
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(isSigned));
            this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(dateSigned));
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(signedAttId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int shotef_mismach, 
                    bool mismach_or_kovetz, 
                    string hanadon, 
                    bool is_nichnas, 
                    int shotef_nichnas_yotze, 
                    string tarich_hamichtav, 
                    string tarich_hazana, 
                    string zman_hazana, 
                    int kod_sholeah, 
                    string teur_tafkid_sholeah, 
                    string simuchin, 
                    string simuchin_metzumtzam, 
                    short kod_sivug_bitchoni, 
                    short kod_meabed_tamlilim, 
                    short msd_template, 
                    bool is_kayam, 
                    bool is_hufatz, 
                    string tarich_hafatza, 
                    bool is_pail, 
                    string makor, 
                    string asmachta_makor, 
                    string hearot, 
                    short msd_proiect, 
                    bool is_hasum, 
                    bool is_rapat, 
                    bool is_sodi, 
                    string user_metaiek, 
                    string Txt, 
                    global::System.Nullable<global::System.DateTime> LastTxtUpdateDate, 
                    byte[] file_data, 
                    string file_extension, 
                    short docType, 
                    int whoOpenedForEdit, 
                    bool isTransferedToSign, 
                    System.DateTime dateTransferedToSign, 
                    bool isSigned, 
                    System.DateTime dateSigned, 
                    int signedAttId, 
                    int Original_shotef_mismach, 
                    bool Original_mismach_or_kovetz, 
                    string Original_hanadon, 
                    bool Original_is_nichnas, 
                    int Original_shotef_nichnas_yotze, 
                    string Original_tarich_hamichtav, 
                    string Original_tarich_hazana, 
                    string Original_zman_hazana, 
                    int Original_kod_sholeah, 
                    string Original_teur_tafkid_sholeah, 
                    string Original_simuchin, 
                    string Original_simuchin_metzumtzam, 
                    short Original_kod_sivug_bitchoni, 
                    short Original_kod_meabed_tamlilim, 
                    short Original_msd_template, 
                    bool Original_is_kayam, 
                    bool Original_is_hufatz, 
                    string Original_tarich_hafatza, 
                    bool Original_is_pail, 
                    string Original_makor, 
                    string Original_asmachta_makor, 
                    short Original_msd_proiect, 
                    bool Original_is_hasum, 
                    bool Original_is_rapat, 
                    bool Original_is_sodi, 
                    string Original_user_metaiek, 
                    global::System.Nullable<global::System.DateTime> Original_LastTxtUpdateDate, 
                    string Original_file_extension, 
                    global::System.Nullable<bool> Original_hasAtts, 
                    short Original_docType, 
                    int Original_whoOpenedForEdit, 
                    bool Original_isTransferedToSign, 
                    System.DateTime Original_dateTransferedToSign, 
                    bool Original_isSigned, 
                    System.DateTime Original_dateSigned, 
                    int Original_signedAttId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(shotef_mismach));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(mismach_or_kovetz));
            if ((hanadon == null)) {
                throw new global::System.ArgumentNullException("hanadon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(hanadon));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(is_nichnas));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(shotef_nichnas_yotze));
            if ((tarich_hamichtav == null)) {
                throw new global::System.ArgumentNullException("tarich_hamichtav");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(tarich_hamichtav));
            }
            if ((tarich_hazana == null)) {
                throw new global::System.ArgumentNullException("tarich_hazana");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(tarich_hazana));
            }
            if ((zman_hazana == null)) {
                throw new global::System.ArgumentNullException("zman_hazana");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(zman_hazana));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(kod_sholeah));
            if ((teur_tafkid_sholeah == null)) {
                throw new global::System.ArgumentNullException("teur_tafkid_sholeah");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(teur_tafkid_sholeah));
            }
            if ((simuchin == null)) {
                throw new global::System.ArgumentNullException("simuchin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(simuchin));
            }
            if ((simuchin_metzumtzam == null)) {
                throw new global::System.ArgumentNullException("simuchin_metzumtzam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(simuchin_metzumtzam));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((short)(kod_sivug_bitchoni));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(kod_meabed_tamlilim));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(msd_template));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(is_kayam));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(is_hufatz));
            if ((tarich_hafatza == null)) {
                throw new global::System.ArgumentNullException("tarich_hafatza");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(tarich_hafatza));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(is_pail));
            if ((makor == null)) {
                throw new global::System.ArgumentNullException("makor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(makor));
            }
            if ((asmachta_makor == null)) {
                throw new global::System.ArgumentNullException("asmachta_makor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(asmachta_makor));
            }
            if ((hearot == null)) {
                throw new global::System.ArgumentNullException("hearot");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(hearot));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((short)(msd_proiect));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(is_hasum));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(is_rapat));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(is_sodi));
            if ((user_metaiek == null)) {
                throw new global::System.ArgumentNullException("user_metaiek");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(user_metaiek));
            }
            if ((Txt == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Txt));
            }
            if ((LastTxtUpdateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(LastTxtUpdateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((file_data == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((byte[])(file_data));
            }
            if ((file_extension == null)) {
                throw new global::System.ArgumentNullException("file_extension");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(file_extension));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((short)(docType));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(whoOpenedForEdit));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(isTransferedToSign));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(dateTransferedToSign));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(isSigned));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(dateSigned));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(signedAttId));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_shotef_mismach));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_mismach_or_kovetz));
            if ((Original_hanadon == null)) {
                throw new global::System.ArgumentNullException("Original_hanadon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_hanadon));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(Original_is_nichnas));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_shotef_nichnas_yotze));
            if ((Original_tarich_hamichtav == null)) {
                throw new global::System.ArgumentNullException("Original_tarich_hamichtav");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_tarich_hamichtav));
            }
            if ((Original_tarich_hazana == null)) {
                throw new global::System.ArgumentNullException("Original_tarich_hazana");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_tarich_hazana));
            }
            if ((Original_zman_hazana == null)) {
                throw new global::System.ArgumentNullException("Original_zman_hazana");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_zman_hazana));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_kod_sholeah));
            if ((Original_teur_tafkid_sholeah == null)) {
                throw new global::System.ArgumentNullException("Original_teur_tafkid_sholeah");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_teur_tafkid_sholeah));
            }
            if ((Original_simuchin == null)) {
                throw new global::System.ArgumentNullException("Original_simuchin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_simuchin));
            }
            if ((Original_simuchin_metzumtzam == null)) {
                throw new global::System.ArgumentNullException("Original_simuchin_metzumtzam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_simuchin_metzumtzam));
            }
            this.Adapter.UpdateCommand.Parameters[50].Value = ((short)(Original_kod_sivug_bitchoni));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((short)(Original_kod_meabed_tamlilim));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((short)(Original_msd_template));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(Original_is_kayam));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(Original_is_hufatz));
            if ((Original_tarich_hafatza == null)) {
                throw new global::System.ArgumentNullException("Original_tarich_hafatza");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_tarich_hafatza));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_is_pail));
            if ((Original_makor == null)) {
                throw new global::System.ArgumentNullException("Original_makor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_makor));
            }
            if ((Original_asmachta_makor == null)) {
                throw new global::System.ArgumentNullException("Original_asmachta_makor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_asmachta_makor));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((short)(Original_msd_proiect));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(Original_is_hasum));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_is_rapat));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_is_sodi));
            if ((Original_user_metaiek == null)) {
                throw new global::System.ArgumentNullException("Original_user_metaiek");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_user_metaiek));
            }
            if ((Original_LastTxtUpdateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_LastTxtUpdateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_file_extension == null)) {
                throw new global::System.ArgumentNullException("Original_file_extension");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_file_extension));
            }
            if ((Original_hasAtts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((bool)(Original_hasAtts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[69].Value = ((short)(Original_docType));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(Original_whoOpenedForEdit));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_isTransferedToSign));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((System.DateTime)(Original_dateTransferedToSign));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Original_isSigned));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(Original_dateSigned));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_signedAttId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    bool mismach_or_kovetz, 
                    string hanadon, 
                    bool is_nichnas, 
                    int shotef_nichnas_yotze, 
                    string tarich_hamichtav, 
                    string tarich_hazana, 
                    string zman_hazana, 
                    int kod_sholeah, 
                    string teur_tafkid_sholeah, 
                    string simuchin, 
                    string simuchin_metzumtzam, 
                    short kod_sivug_bitchoni, 
                    short kod_meabed_tamlilim, 
                    short msd_template, 
                    bool is_kayam, 
                    bool is_hufatz, 
                    string tarich_hafatza, 
                    bool is_pail, 
                    string makor, 
                    string asmachta_makor, 
                    string hearot, 
                    short msd_proiect, 
                    bool is_hasum, 
                    bool is_rapat, 
                    bool is_sodi, 
                    string user_metaiek, 
                    string Txt, 
                    global::System.Nullable<global::System.DateTime> LastTxtUpdateDate, 
                    byte[] file_data, 
                    string file_extension, 
                    short docType, 
                    int whoOpenedForEdit, 
                    bool isTransferedToSign, 
                    System.DateTime dateTransferedToSign, 
                    bool isSigned, 
                    System.DateTime dateSigned, 
                    int signedAttId, 
                    int Original_shotef_mismach, 
                    bool Original_mismach_or_kovetz, 
                    string Original_hanadon, 
                    bool Original_is_nichnas, 
                    int Original_shotef_nichnas_yotze, 
                    string Original_tarich_hamichtav, 
                    string Original_tarich_hazana, 
                    string Original_zman_hazana, 
                    int Original_kod_sholeah, 
                    string Original_teur_tafkid_sholeah, 
                    string Original_simuchin, 
                    string Original_simuchin_metzumtzam, 
                    short Original_kod_sivug_bitchoni, 
                    short Original_kod_meabed_tamlilim, 
                    short Original_msd_template, 
                    bool Original_is_kayam, 
                    bool Original_is_hufatz, 
                    string Original_tarich_hafatza, 
                    bool Original_is_pail, 
                    string Original_makor, 
                    string Original_asmachta_makor, 
                    short Original_msd_proiect, 
                    bool Original_is_hasum, 
                    bool Original_is_rapat, 
                    bool Original_is_sodi, 
                    string Original_user_metaiek, 
                    global::System.Nullable<global::System.DateTime> Original_LastTxtUpdateDate, 
                    string Original_file_extension, 
                    global::System.Nullable<bool> Original_hasAtts, 
                    short Original_docType, 
                    int Original_whoOpenedForEdit, 
                    bool Original_isTransferedToSign, 
                    System.DateTime Original_dateTransferedToSign, 
                    bool Original_isSigned, 
                    System.DateTime Original_dateSigned, 
                    int Original_signedAttId) {
            return this.Update(Original_shotef_mismach, mismach_or_kovetz, hanadon, is_nichnas, shotef_nichnas_yotze, tarich_hamichtav, tarich_hazana, zman_hazana, kod_sholeah, teur_tafkid_sholeah, simuchin, simuchin_metzumtzam, kod_sivug_bitchoni, kod_meabed_tamlilim, msd_template, is_kayam, is_hufatz, tarich_hafatza, is_pail, makor, asmachta_makor, hearot, msd_proiect, is_hasum, is_rapat, is_sodi, user_metaiek, Txt, LastTxtUpdateDate, file_data, file_extension, docType, whoOpenedForEdit, isTransferedToSign, dateTransferedToSign, isSigned, dateSigned, signedAttId, Original_shotef_mismach, Original_mismach_or_kovetz, Original_hanadon, Original_is_nichnas, Original_shotef_nichnas_yotze, Original_tarich_hamichtav, Original_tarich_hazana, Original_zman_hazana, Original_kod_sholeah, Original_teur_tafkid_sholeah, Original_simuchin, Original_simuchin_metzumtzam, Original_kod_sivug_bitchoni, Original_kod_meabed_tamlilim, Original_msd_template, Original_is_kayam, Original_is_hufatz, Original_tarich_hafatza, Original_is_pail, Original_makor, Original_asmachta_makor, Original_msd_proiect, Original_is_hasum, Original_is_rapat, Original_is_sodi, Original_user_metaiek, Original_LastTxtUpdateDate, Original_file_extension, Original_hasAtts, Original_docType, Original_whoOpenedForEdit, Original_isTransferedToSign, Original_dateTransferedToSign, Original_isSigned, Original_dateSigned, Original_signedAttId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class documentsSignTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public documentsSignTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "documentsSign";
            tableMapping.ColumnMappings.Add("shotef_mismach", "shotef_mismach");
            tableMapping.ColumnMappings.Add("hanadon", "hanadon");
            tableMapping.ColumnMappings.Add("tarich_hamichtav", "tarich_hamichtav");
            tableMapping.ColumnMappings.Add("teur_tafkid_sholeah", "teur_tafkid_sholeah");
            tableMapping.ColumnMappings.Add("user_metaiek", "user_metaiek");
            tableMapping.ColumnMappings.Add("isSigned", "isSigned");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Server=185.145.252.75:24412;Database=MantakApp;User Id=MantakApp;Password=MantakApp;";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[11];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT  shotef_mismach, hanadon, tarich_hamichtav, teur_tafkid_sholeah, user_meta" +
                "iek, isSigned\r\nFROM     dbo.documents";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT  shotef_mismach, hanadon, tarich_hamichtav, teur_tafkid_sholeah, user_metaiek, isSigned
FROM     dbo.documents
WHERE  (isTransferedToSign = @isTransferedToSign) AND (is_nichnas = 0) AND (user_metaiek <> @empty) AND (tarich_hamichtav > @minDate) AND (file_data IS NOT NULL) AND (is_pail = @isActive)
ORDER BY user_metaiek";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isTransferedToSign", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isTransferedToSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@empty", global::System.Data.SqlDbType.Char, 6, global::System.Data.ParameterDirection.Input, 0, 0, "user_metaiek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@minDate", global::System.Data.SqlDbType.Char, 8, global::System.Data.ParameterDirection.Input, 0, 0, "tarich_hamichtav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isActive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT  hanadon, isSigned, shotef_mismach, tarich_hamichtav, teur_tafkid_sholeah, user_metaiek
FROM     dbo.documents
WHERE  (kod_sholeah = @userCode) AND (isTransferedToSign = @isTransferedToSign) AND (is_hufatz = @isPublished) AND (is_nichnas = 0) AND (isSigned = @isSigned) AND (file_data IS NOT NULL) AND (is_pail = @isActive)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userCode", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sholeah", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isTransferedToSign", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isTransferedToSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPublished", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_hufatz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSigned", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isActive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT  hanadon, isSigned, shotef_mismach, tarich_hamichtav, teur_tafkid_sholeah," +
                " user_metaiek\r\nFROM     dbo.documents\r\nWHERE  (is_hufatz = @isPublished) AND (is" +
                "Signed = @isSigned) AND (is_nichnas = 0) AND (file_data IS NOT NULL) AND (is_pai" +
                "l = @isActive)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPublished", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_hufatz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSigned", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isActive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT dbo.documents.hanadon, dbo.documents.isSigned, dbo.documents.shotef_mismach, dbo.documents.tarich_hamichtav, dbo.documents.teur_tafkid_sholeah, dbo.documents.user_metaiek FROM dbo.documents INNER JOIN dbo.tmtafkidu ON dbo.documents.kod_sholeah = dbo.tmtafkidu.kod_tpkid WHERE (dbo.documents.is_hufatz = @isPublished) AND (dbo.documents.isSigned = @isSigned) AND (dbo.tmtafkidu.anp_hbrh_ihidh = @permissionBranch)  AND (dbo.documents.is_nichnas = 0) AND (dbo.documents.file_data IS NOT NULL)  AND (dbo.documents.is_pail = @isActive)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPublished", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_hufatz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSigned", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@permissionBranch", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "anp_hbrh_ihidh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isActive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"SELECT  shotef_mismach, hanadon, user_metaiek, tarich_hamichtav, dateSigned, teur_tafkid_sholeah
FROM     dbo.documents
WHERE  (is_hufatz = @isPublished) AND (isSigned = @isSigned) AND (kod_sholeah = @userCode) AND (is_nichnas = 0) AND (file_data IS NOT NULL) AND (is_pail = @isActive)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPublished", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_hufatz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSigned", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userCode", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "kod_sholeah", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isActive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = @"SELECT  shotef_mismach, hanadon, teur_tafkid_sholeah, tarich_hamichtav, is_hufatz
FROM     dbo.documents
WHERE  (isTransferedToSign = @isTransferedToSign) AND (user_metaiek = @userCode) AND (is_nichnas = 0) AND (file_data IS NOT NULL) AND (is_pail = @isActive) AND (is_hufatz = 0)";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isTransferedToSign", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isTransferedToSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userCode", global::System.Data.SqlDbType.Char, 6, global::System.Data.ParameterDirection.Input, 0, 0, "user_metaiek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isActive", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "is_pail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT  CAST(user_metaiek AS int) AS creator\r\nFROM     dbo.documents\r\nWHERE  (sho" +
                "tef_mismach = @docId)";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@docId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT  CAST(kod_sholeah AS int) AS sender\r\nFROM     dbo.documents\r\nWHERE  (shote" +
                "f_mismach = @docId)";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@docId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "UPDATE dbo.documents\r\nSET        isSigned = 1, dateSigned = CAST(GETDATE() AS dat" +
                "e)\r\nWHERE  (shotef_mismach = @id)";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE dbo.documents\r\nSET        isTransferedToSign = @isTransferedToSign, dateTr" +
                "ansferedToSign = CAST(GETDATE() AS date)\r\nWHERE  (shotef_mismach = @id)";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isTransferedToSign", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "isTransferedToSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_mismach", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MantakDBDataSetDocuments.documentsSignDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MantakDBDataSetDocuments.documentsSignDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MantakDBDataSetDocuments.documentsSignDataTable dataTable = new MantakDBDataSetDocuments.documentsSignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAllTransferedToSign(MantakDBDataSetDocuments.documentsSignDataTable dataTable, bool isTransferedToSign, string empty, string minDate, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isTransferedToSign));
            if ((empty == null)) {
                throw new global::System.ArgumentNullException("empty");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(empty));
            }
            if ((minDate == null)) {
                throw new global::System.ArgumentNullException("minDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(minDate));
            }
            this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(isActive));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsSignDataTable GetDataAllTransferedToSign(bool isTransferedToSign, string empty, string minDate, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isTransferedToSign));
            if ((empty == null)) {
                throw new global::System.ArgumentNullException("empty");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(empty));
            }
            if ((minDate == null)) {
                throw new global::System.ArgumentNullException("minDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(minDate));
            }
            this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(isActive));
            MantakDBDataSetDocuments.documentsSignDataTable dataTable = new MantakDBDataSetDocuments.documentsSignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillForMeToSign(MantakDBDataSetDocuments.documentsSignDataTable dataTable, int userCode, bool isTransferedToSign, bool isPublished, bool isSigned, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(userCode));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isTransferedToSign));
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(isActive));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsSignDataTable GetDataForMeToSign(int userCode, bool isTransferedToSign, bool isPublished, bool isSigned, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(userCode));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isTransferedToSign));
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(isActive));
            MantakDBDataSetDocuments.documentsSignDataTable dataTable = new MantakDBDataSetDocuments.documentsSignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillToPublish(MantakDBDataSetDocuments.documentsSignDataTable dataTable, bool isPublished, bool isSigned, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isActive));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsSignDataTable GetDataToPublish(bool isPublished, bool isSigned, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isActive));
            MantakDBDataSetDocuments.documentsSignDataTable dataTable = new MantakDBDataSetDocuments.documentsSignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillToPublishBranch(MantakDBDataSetDocuments.documentsSignDataTable dataTable, bool isPublished, bool isSigned, short permissionBranch, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[2].Value = ((short)(permissionBranch));
            this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(isActive));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsSignDataTable GetDataToPublishBranch(bool isPublished, bool isSigned, short permissionBranch, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[2].Value = ((short)(permissionBranch));
            this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(isActive));
            MantakDBDataSetDocuments.documentsSignDataTable dataTable = new MantakDBDataSetDocuments.documentsSignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillToPublishPerson(MantakDBDataSetDocuments.documentsSignDataTable dataTable, bool isPublished, bool isSigned, int userCode, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(userCode));
            this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(isActive));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsSignDataTable GetDataToPublishPerson(bool isPublished, bool isSigned, int userCode, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isPublished));
            this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(isSigned));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(userCode));
            this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(isActive));
            MantakDBDataSetDocuments.documentsSignDataTable dataTable = new MantakDBDataSetDocuments.documentsSignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillTransferToSign(MantakDBDataSetDocuments.documentsSignDataTable dataTable, bool isTransferedToSign, string userCode, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isTransferedToSign));
            if ((userCode == null)) {
                throw new global::System.ArgumentNullException("userCode");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(userCode));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isActive));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.documentsSignDataTable GetDataTransferToSign(bool isTransferedToSign, string userCode, bool isActive) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(isTransferedToSign));
            if ((userCode == null)) {
                throw new global::System.ArgumentNullException("userCode");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(userCode));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(isActive));
            MantakDBDataSetDocuments.documentsSignDataTable dataTable = new MantakDBDataSetDocuments.documentsSignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> getCreatorByDocId(int docId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[7];
            command.Parameters[0].Value = ((int)(docId));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> getSenderByDocId(int docId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[8];
            command.Parameters[0].Value = ((int)(docId));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int sign(int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[9];
            command.Parameters[0].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int transferToSign(bool isTransferedToSign, int id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[10];
            command.Parameters[0].Value = ((bool)(isTransferedToSign));
            command.Parameters[1].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tmtafkiduTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public tmtafkiduTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tmtafkidu";
            tableMapping.ColumnMappings.Add("taor_tpkid", "taor_tpkid");
            tableMapping.ColumnMappings.Add("doal", "doal");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Server=185.145.252.75:24412;Database=MantakApp;User Id=MantakApp;Password=MantakApp;";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT  taor_tpkid, doal, FullName\r\nFROM     dbo.tmtafkidu\r\nWHERE  (kod_tpkid = @" +
                "userCode)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userCode", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "kod_tpkid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillAUser(MantakDBDataSetDocuments.tmtafkiduDataTable dataTable, int userCode) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(userCode));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MantakDBDataSetDocuments.tmtafkiduDataTable GetAUser(int userCode) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(userCode));
            MantakDBDataSetDocuments.tmtafkiduDataTable dataTable = new MantakDBDataSetDocuments.tmtafkiduDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tiukimTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public tiukimTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tiukim";
            tableMapping.ColumnMappings.Add("kod_marechet", "kod_marechet");
            tableMapping.ColumnMappings.Add("shotef_klali", "shotef_klali");
            tableMapping.ColumnMappings.Add("mispar_nose", "mispar_nose");
            tableMapping.ColumnMappings.Add("is_rashi", "is_rashi");
            tableMapping.ColumnMappings.Add("mispar_in_tik", "mispar_in_tik");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tiukim] ([kod_marechet], [shotef_klali], [mispar_nose], [is_ra" +
                "shi], [mispar_in_tik]) VALUES (@kod_marechet, @shotef_klali, @mispar_nose, @is_r" +
                "ashi, @mispar_in_tik)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod_marechet", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_marechet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shotef_klali", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_klali", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mispar_nose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mispar_nose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_rashi", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_rashi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mispar_in_tik", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mispar_in_tik", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Server=185.145.252.75:24412;Database=MantakApp;User Id=MantakApp;Password=MantakApp;";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT  kod_marechet, shotef_klali, mispar_nose, is_rashi, mispar_in_tik\r\nFROM   " +
                "  dbo.tiukim";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT  kod_marechet, shotef_klali, mispar_nose, is_rashi, mispar_in_tik\r\nFROM   " +
                "  dbo.tiukim\r\nWHERE  (shotef_klali = @docId)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@docId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shotef_klali", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MantakDBDataSetDocuments.tiukimDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MantakDBDataSetDocuments.tiukimDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MantakDBDataSetDocuments.tiukimDataTable dataTable = new MantakDBDataSetDocuments.tiukimDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(MantakDBDataSetDocuments.tiukimDataTable dataTable, int docId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(docId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MantakDBDataSetDocuments.tiukimDataTable GetDataBy(int docId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(docId));
            MantakDBDataSetDocuments.tiukimDataTable dataTable = new MantakDBDataSetDocuments.tiukimDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MantakDBDataSetDocuments.tiukimDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MantakDBDataSetDocuments dataSet) {
            return this.Adapter.Update(dataSet, "tiukim");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short kod_marechet, int shotef_klali, int mispar_nose, bool is_rashi, int mispar_in_tik) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(kod_marechet));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(shotef_klali));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(mispar_nose));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(is_rashi));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(mispar_in_tik));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tm_kubiotTableAdapter _tm_kubiotTableAdapter;
        
        private roleTypesTableAdapter _roleTypesTableAdapter;
        
        private documentsTableAdapter _documentsTableAdapter;
        
        private tiukimTableAdapter _tiukimTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tm_kubiotTableAdapter tm_kubiotTableAdapter {
            get {
                return this._tm_kubiotTableAdapter;
            }
            set {
                this._tm_kubiotTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public roleTypesTableAdapter roleTypesTableAdapter {
            get {
                return this._roleTypesTableAdapter;
            }
            set {
                this._roleTypesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public documentsTableAdapter documentsTableAdapter {
            get {
                return this._documentsTableAdapter;
            }
            set {
                this._documentsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tiukimTableAdapter tiukimTableAdapter {
            get {
                return this._tiukimTableAdapter;
            }
            set {
                this._tiukimTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tm_kubiotTableAdapter != null) 
                            && (this._tm_kubiotTableAdapter.Connection != null))) {
                    return this._tm_kubiotTableAdapter.Connection;
                }
                if (((this._roleTypesTableAdapter != null) 
                            && (this._roleTypesTableAdapter.Connection != null))) {
                    return this._roleTypesTableAdapter.Connection;
                }
                if (((this._documentsTableAdapter != null) 
                            && (this._documentsTableAdapter.Connection != null))) {
                    return this._documentsTableAdapter.Connection;
                }
                if (((this._tiukimTableAdapter != null) 
                            && (this._tiukimTableAdapter.Connection != null))) {
                    return this._tiukimTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tm_kubiotTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._roleTypesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._documentsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tiukimTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(MantakDBDataSetDocuments dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tm_kubiotTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tm_kubiot.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tm_kubiotTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._roleTypesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.roleTypes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._roleTypesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._documentsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.documents.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._documentsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tiukimTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tiukim.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tiukimTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(MantakDBDataSetDocuments dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tm_kubiotTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tm_kubiot.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tm_kubiotTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._roleTypesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.roleTypes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._roleTypesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._documentsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.documents.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._documentsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tiukimTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tiukim.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tiukimTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(MantakDBDataSetDocuments dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tiukimTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tiukim.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tiukimTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._documentsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.documents.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._documentsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._roleTypesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.roleTypes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._roleTypesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tm_kubiotTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tm_kubiot.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tm_kubiotTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(MantakDBDataSetDocuments dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tm_kubiotTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tm_kubiotTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._roleTypesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._roleTypesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._documentsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._documentsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tiukimTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tiukimTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tm_kubiotTableAdapter != null)) {
                    revertConnections.Add(this._tm_kubiotTableAdapter, this._tm_kubiotTableAdapter.Connection);
                    this._tm_kubiotTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tm_kubiotTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tm_kubiotTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tm_kubiotTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tm_kubiotTableAdapter.Adapter);
                    }
                }
                if ((this._roleTypesTableAdapter != null)) {
                    revertConnections.Add(this._roleTypesTableAdapter, this._roleTypesTableAdapter.Connection);
                    this._roleTypesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._roleTypesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._roleTypesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._roleTypesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._roleTypesTableAdapter.Adapter);
                    }
                }
                if ((this._documentsTableAdapter != null)) {
                    revertConnections.Add(this._documentsTableAdapter, this._documentsTableAdapter.Connection);
                    this._documentsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._documentsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._documentsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._documentsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._documentsTableAdapter.Adapter);
                    }
                }
                if ((this._tiukimTableAdapter != null)) {
                    revertConnections.Add(this._tiukimTableAdapter, this._tiukimTableAdapter.Connection);
                    this._tiukimTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tiukimTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tiukimTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tiukimTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tiukimTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tm_kubiotTableAdapter != null)) {
                    this._tm_kubiotTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tm_kubiotTableAdapter]));
                    this._tm_kubiotTableAdapter.Transaction = null;
                }
                if ((this._roleTypesTableAdapter != null)) {
                    this._roleTypesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._roleTypesTableAdapter]));
                    this._roleTypesTableAdapter.Transaction = null;
                }
                if ((this._documentsTableAdapter != null)) {
                    this._documentsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._documentsTableAdapter]));
                    this._documentsTableAdapter.Transaction = null;
                }
                if ((this._tiukimTableAdapter != null)) {
                    this._tiukimTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tiukimTableAdapter]));
                    this._tiukimTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591